{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactBrowserEventEmitter\n * @typechecks static-only\n */\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\n\nvar EventPluginHub = require(\"./EventPluginHub\");\n\nvar EventPluginRegistry = require(\"./EventPluginRegistry\");\n\nvar ReactEventEmitterMixin = require(\"./ReactEventEmitterMixin\");\n\nvar ViewportMetrics = require(\"./ViewportMetrics\");\n\nvar assign = require(\"./Object.assign\");\n\nvar isEventSupported = require(\"./isEventSupported\");\n/**\n * Summary of `ReactBrowserEventEmitter` event handling:\n *\n *  - Top-level delegation is used to trap most native browser events. This\n *    may only occur in the main thread and is the responsibility of\n *    ReactEventListener, which is injected and can therefore support pluggable\n *    event sources. This is the only work that occurs in the main thread.\n *\n *  - We normalize and de-duplicate events to account for browser quirks. This\n *    may be done in the worker thread.\n *\n *  - Forward these native events (with the associated top-level type used to\n *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want\n *    to extract any synthetic events.\n *\n *  - The `EventPluginHub` will then process each event by annotating them with\n *    \"dispatches\", a sequence of listeners and IDs that care about that event.\n *\n *  - The `EventPluginHub` then dispatches the events.\n *\n * Overview of React and the event system:\n *\n * +------------+    .\n * |    DOM     |    .\n * +------------+    .\n *       |           .\n *       v           .\n * +------------+    .\n * | ReactEvent |    .\n * |  Listener  |    .\n * +------------+    .                         +-----------+\n *       |           .               +--------+|SimpleEvent|\n *       |           .               |         |Plugin     |\n * +-----|------+    .               v         +-----------+\n * |     |      |    .    +--------------+                    +------------+\n * |     +-----------.--->|EventPluginHub|                    |    Event   |\n * |            |    .    |              |     +-----------+  | Propagators|\n * | ReactEvent |    .    |              |     |TapEvent   |  |------------|\n * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|\n * |            |    .    |              |     +-----------+  |  utilities |\n * |     +-----------.--->|              |                    +------------+\n * |     |      |    .    +--------------+\n * +-----|------+    .                ^        +-----------+\n *       |           .                |        |Enter/Leave|\n *       +           .                +-------+|Plugin     |\n * +-------------+   .                         +-----------+\n * | application |   .\n * |-------------|   .\n * |             |   .\n * |             |   .\n * +-------------+   .\n *                   .\n *    React Core     .  General Purpose Event Plugin System\n */\n\n\nvar alreadyListeningTo = {};\nvar isMonitoringScrollValue = false;\nvar reactTopListenersCounter = 0; // For events like 'submit' which don't consistently bubble (which we trap at a\n// lower node than `document`), binding at `document` would cause duplicate\n// events so we don't include them here\n\nvar topEventMapping = {\n  topBlur: 'blur',\n  topChange: 'change',\n  topClick: 'click',\n  topCompositionEnd: 'compositionend',\n  topCompositionStart: 'compositionstart',\n  topCompositionUpdate: 'compositionupdate',\n  topContextMenu: 'contextmenu',\n  topCopy: 'copy',\n  topCut: 'cut',\n  topDoubleClick: 'dblclick',\n  topDrag: 'drag',\n  topDragEnd: 'dragend',\n  topDragEnter: 'dragenter',\n  topDragExit: 'dragexit',\n  topDragLeave: 'dragleave',\n  topDragOver: 'dragover',\n  topDragStart: 'dragstart',\n  topDrop: 'drop',\n  topFocus: 'focus',\n  topInput: 'input',\n  topKeyDown: 'keydown',\n  topKeyPress: 'keypress',\n  topKeyUp: 'keyup',\n  topMouseDown: 'mousedown',\n  topMouseMove: 'mousemove',\n  topMouseOut: 'mouseout',\n  topMouseOver: 'mouseover',\n  topMouseUp: 'mouseup',\n  topPaste: 'paste',\n  topScroll: 'scroll',\n  topSelectionChange: 'selectionchange',\n  topTextInput: 'textInput',\n  topTouchCancel: 'touchcancel',\n  topTouchEnd: 'touchend',\n  topTouchMove: 'touchmove',\n  topTouchStart: 'touchstart',\n  topWheel: 'wheel'\n};\n/**\n * To ensure no conflicts with other potential React instances on the page\n */\n\nvar topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);\n\nfunction getListeningForDocument(mountAt) {\n  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`\n  // directly.\n  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {\n    mountAt[topListenersIDKey] = reactTopListenersCounter++;\n    alreadyListeningTo[mountAt[topListenersIDKey]] = {};\n  }\n\n  return alreadyListeningTo[mountAt[topListenersIDKey]];\n}\n/**\n * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For\n * example:\n *\n *   ReactBrowserEventEmitter.putListener('myID', 'onClick', myFunction);\n *\n * This would allocate a \"registration\" of `('onClick', myFunction)` on 'myID'.\n *\n * @internal\n */\n\n\nvar ReactBrowserEventEmitter = assign({}, ReactEventEmitterMixin, {\n  /**\n   * Injectable event backend\n   */\n  ReactEventListener: null,\n  injection: {\n    /**\n     * @param {object} ReactEventListener\n     */\n    injectReactEventListener: function (ReactEventListener) {\n      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);\n      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;\n    }\n  },\n\n  /**\n   * Sets whether or not any created callbacks should be enabled.\n   *\n   * @param {boolean} enabled True if callbacks should be enabled.\n   */\n  setEnabled: function (enabled) {\n    if (ReactBrowserEventEmitter.ReactEventListener) {\n      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);\n    }\n  },\n\n  /**\n   * @return {boolean} True if callbacks are enabled.\n   */\n  isEnabled: function () {\n    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());\n  },\n\n  /**\n   * We listen for bubbled touch events on the document object.\n   *\n   * Firefox v8.01 (and possibly others) exhibited strange behavior when\n   * mounting `onmousemove` events at some node that was not the document\n   * element. The symptoms were that if your mouse is not moving over something\n   * contained within that mount point (for example on the background) the\n   * top-level listeners for `onmousemove` won't be called. However, if you\n   * register the `mousemove` on the document object, then it will of course\n   * catch all `mousemove`s. This along with iOS quirks, justifies restricting\n   * top-level listeners to the document object only, at least for these\n   * movement types of events and possibly all events.\n   *\n   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n   *\n   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but\n   * they bubble to document.\n   *\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @param {object} contentDocumentHandle Document which owns the container\n   */\n  listenTo: function (registrationName, contentDocumentHandle) {\n    var mountAt = contentDocumentHandle;\n    var isListening = getListeningForDocument(mountAt);\n    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];\n    var topLevelTypes = EventConstants.topLevelTypes;\n\n    for (var i = 0, l = dependencies.length; i < l; i++) {\n      var dependency = dependencies[i];\n\n      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {\n        if (dependency === topLevelTypes.topWheel) {\n          if (isEventSupported('wheel')) {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'wheel', mountAt);\n          } else if (isEventSupported('mousewheel')) {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'mousewheel', mountAt);\n          } else {\n            // Firefox needs to capture a different mouse scroll event.\n            // @see http://www.quirksmode.org/dom/events/tests/scroll.html\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'DOMMouseScroll', mountAt);\n          }\n        } else if (dependency === topLevelTypes.topScroll) {\n          if (isEventSupported('scroll', true)) {\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topScroll, 'scroll', mountAt);\n          } else {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topScroll, 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);\n          }\n        } else if (dependency === topLevelTypes.topFocus || dependency === topLevelTypes.topBlur) {\n          if (isEventSupported('focus', true)) {\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topFocus, 'focus', mountAt);\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topBlur, 'blur', mountAt);\n          } else if (isEventSupported('focusin')) {\n            // IE has `focusin` and `focusout` events which bubble.\n            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topFocus, 'focusin', mountAt);\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topBlur, 'focusout', mountAt);\n          } // to make sure blur and focus event listeners are only attached once\n\n\n          isListening[topLevelTypes.topBlur] = true;\n          isListening[topLevelTypes.topFocus] = true;\n        } else if (topEventMapping.hasOwnProperty(dependency)) {\n          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);\n        }\n\n        isListening[dependency] = true;\n      }\n    }\n  },\n  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {\n    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);\n  },\n  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {\n    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);\n  },\n\n  /**\n   * Listens to window scroll and resize events. We cache scroll values so that\n   * application code can access them without triggering reflows.\n   *\n   * NOTE: Scroll events do not bubble.\n   *\n   * @see http://www.quirksmode.org/dom/events/scroll.html\n   */\n  ensureScrollValueMonitoring: function () {\n    if (!isMonitoringScrollValue) {\n      var refresh = ViewportMetrics.refreshScrollValues;\n      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);\n      isMonitoringScrollValue = true;\n    }\n  },\n  eventNameDispatchConfigs: EventPluginHub.eventNameDispatchConfigs,\n  registrationNameModules: EventPluginHub.registrationNameModules,\n  putListener: EventPluginHub.putListener,\n  getListener: EventPluginHub.getListener,\n  deleteListener: EventPluginHub.deleteListener,\n  deleteAllListeners: EventPluginHub.deleteAllListeners\n});\nmodule.exports = ReactBrowserEventEmitter;","map":{"version":3,"names":["EventConstants","require","EventPluginHub","EventPluginRegistry","ReactEventEmitterMixin","ViewportMetrics","assign","isEventSupported","alreadyListeningTo","isMonitoringScrollValue","reactTopListenersCounter","topEventMapping","topBlur","topChange","topClick","topCompositionEnd","topCompositionStart","topCompositionUpdate","topContextMenu","topCopy","topCut","topDoubleClick","topDrag","topDragEnd","topDragEnter","topDragExit","topDragLeave","topDragOver","topDragStart","topDrop","topFocus","topInput","topKeyDown","topKeyPress","topKeyUp","topMouseDown","topMouseMove","topMouseOut","topMouseOver","topMouseUp","topPaste","topScroll","topSelectionChange","topTextInput","topTouchCancel","topTouchEnd","topTouchMove","topTouchStart","topWheel","topListenersIDKey","String","Math","random","slice","getListeningForDocument","mountAt","Object","prototype","hasOwnProperty","call","ReactBrowserEventEmitter","ReactEventListener","injection","injectReactEventListener","setHandleTopLevel","handleTopLevel","setEnabled","enabled","isEnabled","listenTo","registrationName","contentDocumentHandle","isListening","dependencies","registrationNameDependencies","topLevelTypes","i","l","length","dependency","trapBubbledEvent","trapCapturedEvent","WINDOW_HANDLE","topLevelType","handlerBaseName","handle","ensureScrollValueMonitoring","refresh","refreshScrollValues","monitorScrollValue","eventNameDispatchConfigs","registrationNameModules","putListener","getListener","deleteListener","deleteAllListeners","module","exports"],"sources":["/Users/ozigun1988/Desktop/git/project/sosyete-frontend/node_modules/react-upvote/node_modules/react/lib/ReactBrowserEventEmitter.js"],"sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactBrowserEventEmitter\n * @typechecks static-only\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar EventPluginHub = require(\"./EventPluginHub\");\nvar EventPluginRegistry = require(\"./EventPluginRegistry\");\nvar ReactEventEmitterMixin = require(\"./ReactEventEmitterMixin\");\nvar ViewportMetrics = require(\"./ViewportMetrics\");\n\nvar assign = require(\"./Object.assign\");\nvar isEventSupported = require(\"./isEventSupported\");\n\n/**\n * Summary of `ReactBrowserEventEmitter` event handling:\n *\n *  - Top-level delegation is used to trap most native browser events. This\n *    may only occur in the main thread and is the responsibility of\n *    ReactEventListener, which is injected and can therefore support pluggable\n *    event sources. This is the only work that occurs in the main thread.\n *\n *  - We normalize and de-duplicate events to account for browser quirks. This\n *    may be done in the worker thread.\n *\n *  - Forward these native events (with the associated top-level type used to\n *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want\n *    to extract any synthetic events.\n *\n *  - The `EventPluginHub` will then process each event by annotating them with\n *    \"dispatches\", a sequence of listeners and IDs that care about that event.\n *\n *  - The `EventPluginHub` then dispatches the events.\n *\n * Overview of React and the event system:\n *\n * +------------+    .\n * |    DOM     |    .\n * +------------+    .\n *       |           .\n *       v           .\n * +------------+    .\n * | ReactEvent |    .\n * |  Listener  |    .\n * +------------+    .                         +-----------+\n *       |           .               +--------+|SimpleEvent|\n *       |           .               |         |Plugin     |\n * +-----|------+    .               v         +-----------+\n * |     |      |    .    +--------------+                    +------------+\n * |     +-----------.--->|EventPluginHub|                    |    Event   |\n * |            |    .    |              |     +-----------+  | Propagators|\n * | ReactEvent |    .    |              |     |TapEvent   |  |------------|\n * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|\n * |            |    .    |              |     +-----------+  |  utilities |\n * |     +-----------.--->|              |                    +------------+\n * |     |      |    .    +--------------+\n * +-----|------+    .                ^        +-----------+\n *       |           .                |        |Enter/Leave|\n *       +           .                +-------+|Plugin     |\n * +-------------+   .                         +-----------+\n * | application |   .\n * |-------------|   .\n * |             |   .\n * |             |   .\n * +-------------+   .\n *                   .\n *    React Core     .  General Purpose Event Plugin System\n */\n\nvar alreadyListeningTo = {};\nvar isMonitoringScrollValue = false;\nvar reactTopListenersCounter = 0;\n\n// For events like 'submit' which don't consistently bubble (which we trap at a\n// lower node than `document`), binding at `document` would cause duplicate\n// events so we don't include them here\nvar topEventMapping = {\n  topBlur: 'blur',\n  topChange: 'change',\n  topClick: 'click',\n  topCompositionEnd: 'compositionend',\n  topCompositionStart: 'compositionstart',\n  topCompositionUpdate: 'compositionupdate',\n  topContextMenu: 'contextmenu',\n  topCopy: 'copy',\n  topCut: 'cut',\n  topDoubleClick: 'dblclick',\n  topDrag: 'drag',\n  topDragEnd: 'dragend',\n  topDragEnter: 'dragenter',\n  topDragExit: 'dragexit',\n  topDragLeave: 'dragleave',\n  topDragOver: 'dragover',\n  topDragStart: 'dragstart',\n  topDrop: 'drop',\n  topFocus: 'focus',\n  topInput: 'input',\n  topKeyDown: 'keydown',\n  topKeyPress: 'keypress',\n  topKeyUp: 'keyup',\n  topMouseDown: 'mousedown',\n  topMouseMove: 'mousemove',\n  topMouseOut: 'mouseout',\n  topMouseOver: 'mouseover',\n  topMouseUp: 'mouseup',\n  topPaste: 'paste',\n  topScroll: 'scroll',\n  topSelectionChange: 'selectionchange',\n  topTextInput: 'textInput',\n  topTouchCancel: 'touchcancel',\n  topTouchEnd: 'touchend',\n  topTouchMove: 'touchmove',\n  topTouchStart: 'touchstart',\n  topWheel: 'wheel'\n};\n\n/**\n * To ensure no conflicts with other potential React instances on the page\n */\nvar topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);\n\nfunction getListeningForDocument(mountAt) {\n  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`\n  // directly.\n  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {\n    mountAt[topListenersIDKey] = reactTopListenersCounter++;\n    alreadyListeningTo[mountAt[topListenersIDKey]] = {};\n  }\n  return alreadyListeningTo[mountAt[topListenersIDKey]];\n}\n\n/**\n * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For\n * example:\n *\n *   ReactBrowserEventEmitter.putListener('myID', 'onClick', myFunction);\n *\n * This would allocate a \"registration\" of `('onClick', myFunction)` on 'myID'.\n *\n * @internal\n */\nvar ReactBrowserEventEmitter = assign({}, ReactEventEmitterMixin, {\n\n  /**\n   * Injectable event backend\n   */\n  ReactEventListener: null,\n\n  injection: {\n    /**\n     * @param {object} ReactEventListener\n     */\n    injectReactEventListener: function(ReactEventListener) {\n      ReactEventListener.setHandleTopLevel(\n        ReactBrowserEventEmitter.handleTopLevel\n      );\n      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;\n    }\n  },\n\n  /**\n   * Sets whether or not any created callbacks should be enabled.\n   *\n   * @param {boolean} enabled True if callbacks should be enabled.\n   */\n  setEnabled: function(enabled) {\n    if (ReactBrowserEventEmitter.ReactEventListener) {\n      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);\n    }\n  },\n\n  /**\n   * @return {boolean} True if callbacks are enabled.\n   */\n  isEnabled: function() {\n    return !!(\n      (ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled())\n    );\n  },\n\n  /**\n   * We listen for bubbled touch events on the document object.\n   *\n   * Firefox v8.01 (and possibly others) exhibited strange behavior when\n   * mounting `onmousemove` events at some node that was not the document\n   * element. The symptoms were that if your mouse is not moving over something\n   * contained within that mount point (for example on the background) the\n   * top-level listeners for `onmousemove` won't be called. However, if you\n   * register the `mousemove` on the document object, then it will of course\n   * catch all `mousemove`s. This along with iOS quirks, justifies restricting\n   * top-level listeners to the document object only, at least for these\n   * movement types of events and possibly all events.\n   *\n   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n   *\n   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but\n   * they bubble to document.\n   *\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @param {object} contentDocumentHandle Document which owns the container\n   */\n  listenTo: function(registrationName, contentDocumentHandle) {\n    var mountAt = contentDocumentHandle;\n    var isListening = getListeningForDocument(mountAt);\n    var dependencies = EventPluginRegistry.\n      registrationNameDependencies[registrationName];\n\n    var topLevelTypes = EventConstants.topLevelTypes;\n    for (var i = 0, l = dependencies.length; i < l; i++) {\n      var dependency = dependencies[i];\n      if (!(\n            (isListening.hasOwnProperty(dependency) && isListening[dependency])\n          )) {\n        if (dependency === topLevelTypes.topWheel) {\n          if (isEventSupported('wheel')) {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n              topLevelTypes.topWheel,\n              'wheel',\n              mountAt\n            );\n          } else if (isEventSupported('mousewheel')) {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n              topLevelTypes.topWheel,\n              'mousewheel',\n              mountAt\n            );\n          } else {\n            // Firefox needs to capture a different mouse scroll event.\n            // @see http://www.quirksmode.org/dom/events/tests/scroll.html\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n              topLevelTypes.topWheel,\n              'DOMMouseScroll',\n              mountAt\n            );\n          }\n        } else if (dependency === topLevelTypes.topScroll) {\n\n          if (isEventSupported('scroll', true)) {\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(\n              topLevelTypes.topScroll,\n              'scroll',\n              mountAt\n            );\n          } else {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n              topLevelTypes.topScroll,\n              'scroll',\n              ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE\n            );\n          }\n        } else if (dependency === topLevelTypes.topFocus ||\n            dependency === topLevelTypes.topBlur) {\n\n          if (isEventSupported('focus', true)) {\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(\n              topLevelTypes.topFocus,\n              'focus',\n              mountAt\n            );\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(\n              topLevelTypes.topBlur,\n              'blur',\n              mountAt\n            );\n          } else if (isEventSupported('focusin')) {\n            // IE has `focusin` and `focusout` events which bubble.\n            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n              topLevelTypes.topFocus,\n              'focusin',\n              mountAt\n            );\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n              topLevelTypes.topBlur,\n              'focusout',\n              mountAt\n            );\n          }\n\n          // to make sure blur and focus event listeners are only attached once\n          isListening[topLevelTypes.topBlur] = true;\n          isListening[topLevelTypes.topFocus] = true;\n        } else if (topEventMapping.hasOwnProperty(dependency)) {\n          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n            dependency,\n            topEventMapping[dependency],\n            mountAt\n          );\n        }\n\n        isListening[dependency] = true;\n      }\n    }\n  },\n\n  trapBubbledEvent: function(topLevelType, handlerBaseName, handle) {\n    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n      topLevelType,\n      handlerBaseName,\n      handle\n    );\n  },\n\n  trapCapturedEvent: function(topLevelType, handlerBaseName, handle) {\n    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(\n      topLevelType,\n      handlerBaseName,\n      handle\n    );\n  },\n\n  /**\n   * Listens to window scroll and resize events. We cache scroll values so that\n   * application code can access them without triggering reflows.\n   *\n   * NOTE: Scroll events do not bubble.\n   *\n   * @see http://www.quirksmode.org/dom/events/scroll.html\n   */\n  ensureScrollValueMonitoring: function() {\n    if (!isMonitoringScrollValue) {\n      var refresh = ViewportMetrics.refreshScrollValues;\n      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);\n      isMonitoringScrollValue = true;\n    }\n  },\n\n  eventNameDispatchConfigs: EventPluginHub.eventNameDispatchConfigs,\n\n  registrationNameModules: EventPluginHub.registrationNameModules,\n\n  putListener: EventPluginHub.putListener,\n\n  getListener: EventPluginHub.getListener,\n\n  deleteListener: EventPluginHub.deleteListener,\n\n  deleteAllListeners: EventPluginHub.deleteAllListeners\n\n});\n\nmodule.exports = ReactBrowserEventEmitter;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,cAAc,GAAGC,OAAO,CAAC,kBAAD,CAA5B;;AACA,IAAIC,cAAc,GAAGD,OAAO,CAAC,kBAAD,CAA5B;;AACA,IAAIE,mBAAmB,GAAGF,OAAO,CAAC,uBAAD,CAAjC;;AACA,IAAIG,sBAAsB,GAAGH,OAAO,CAAC,0BAAD,CAApC;;AACA,IAAII,eAAe,GAAGJ,OAAO,CAAC,mBAAD,CAA7B;;AAEA,IAAIK,MAAM,GAAGL,OAAO,CAAC,iBAAD,CAApB;;AACA,IAAIM,gBAAgB,GAAGN,OAAO,CAAC,oBAAD,CAA9B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAIO,kBAAkB,GAAG,EAAzB;AACA,IAAIC,uBAAuB,GAAG,KAA9B;AACA,IAAIC,wBAAwB,GAAG,CAA/B,C,CAEA;AACA;AACA;;AACA,IAAIC,eAAe,GAAG;EACpBC,OAAO,EAAE,MADW;EAEpBC,SAAS,EAAE,QAFS;EAGpBC,QAAQ,EAAE,OAHU;EAIpBC,iBAAiB,EAAE,gBAJC;EAKpBC,mBAAmB,EAAE,kBALD;EAMpBC,oBAAoB,EAAE,mBANF;EAOpBC,cAAc,EAAE,aAPI;EAQpBC,OAAO,EAAE,MARW;EASpBC,MAAM,EAAE,KATY;EAUpBC,cAAc,EAAE,UAVI;EAWpBC,OAAO,EAAE,MAXW;EAYpBC,UAAU,EAAE,SAZQ;EAapBC,YAAY,EAAE,WAbM;EAcpBC,WAAW,EAAE,UAdO;EAepBC,YAAY,EAAE,WAfM;EAgBpBC,WAAW,EAAE,UAhBO;EAiBpBC,YAAY,EAAE,WAjBM;EAkBpBC,OAAO,EAAE,MAlBW;EAmBpBC,QAAQ,EAAE,OAnBU;EAoBpBC,QAAQ,EAAE,OApBU;EAqBpBC,UAAU,EAAE,SArBQ;EAsBpBC,WAAW,EAAE,UAtBO;EAuBpBC,QAAQ,EAAE,OAvBU;EAwBpBC,YAAY,EAAE,WAxBM;EAyBpBC,YAAY,EAAE,WAzBM;EA0BpBC,WAAW,EAAE,UA1BO;EA2BpBC,YAAY,EAAE,WA3BM;EA4BpBC,UAAU,EAAE,SA5BQ;EA6BpBC,QAAQ,EAAE,OA7BU;EA8BpBC,SAAS,EAAE,QA9BS;EA+BpBC,kBAAkB,EAAE,iBA/BA;EAgCpBC,YAAY,EAAE,WAhCM;EAiCpBC,cAAc,EAAE,aAjCI;EAkCpBC,WAAW,EAAE,UAlCO;EAmCpBC,YAAY,EAAE,WAnCM;EAoCpBC,aAAa,EAAE,YApCK;EAqCpBC,QAAQ,EAAE;AArCU,CAAtB;AAwCA;AACA;AACA;;AACA,IAAIC,iBAAiB,GAAG,sBAAsBC,MAAM,CAACC,IAAI,CAACC,MAAL,EAAD,CAAN,CAAsBC,KAAtB,CAA4B,CAA5B,CAA9C;;AAEA,SAASC,uBAAT,CAAiCC,OAAjC,EAA0C;EACxC;EACA;EACA,IAAI,CAACC,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,OAArC,EAA8CN,iBAA9C,CAAL,EAAuE;IACrEM,OAAO,CAACN,iBAAD,CAAP,GAA6BvC,wBAAwB,EAArD;IACAF,kBAAkB,CAAC+C,OAAO,CAACN,iBAAD,CAAR,CAAlB,GAAiD,EAAjD;EACD;;EACD,OAAOzC,kBAAkB,CAAC+C,OAAO,CAACN,iBAAD,CAAR,CAAzB;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIW,wBAAwB,GAAGtD,MAAM,CAAC,EAAD,EAAKF,sBAAL,EAA6B;EAEhE;AACF;AACA;EACEyD,kBAAkB,EAAE,IAL4C;EAOhEC,SAAS,EAAE;IACT;AACJ;AACA;IACIC,wBAAwB,EAAE,UAASF,kBAAT,EAA6B;MACrDA,kBAAkB,CAACG,iBAAnB,CACEJ,wBAAwB,CAACK,cAD3B;MAGAL,wBAAwB,CAACC,kBAAzB,GAA8CA,kBAA9C;IACD;EATQ,CAPqD;;EAmBhE;AACF;AACA;AACA;AACA;EACEK,UAAU,EAAE,UAASC,OAAT,EAAkB;IAC5B,IAAIP,wBAAwB,CAACC,kBAA7B,EAAiD;MAC/CD,wBAAwB,CAACC,kBAAzB,CAA4CK,UAA5C,CAAuDC,OAAvD;IACD;EACF,CA5B+D;;EA8BhE;AACF;AACA;EACEC,SAAS,EAAE,YAAW;IACpB,OAAO,CAAC,EACLR,wBAAwB,CAACC,kBAAzB,IAA+CD,wBAAwB,CAACC,kBAAzB,CAA4CO,SAA5C,EAD1C,CAAR;EAGD,CArC+D;;EAuChE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,QAAQ,EAAE,UAASC,gBAAT,EAA2BC,qBAA3B,EAAkD;IAC1D,IAAIhB,OAAO,GAAGgB,qBAAd;IACA,IAAIC,WAAW,GAAGlB,uBAAuB,CAACC,OAAD,CAAzC;IACA,IAAIkB,YAAY,GAAGtE,mBAAmB,CACpCuE,4BADiB,CACYJ,gBADZ,CAAnB;IAGA,IAAIK,aAAa,GAAG3E,cAAc,CAAC2E,aAAnC;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGJ,YAAY,CAACK,MAAjC,EAAyCF,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;MACnD,IAAIG,UAAU,GAAGN,YAAY,CAACG,CAAD,CAA7B;;MACA,IAAI,EACGJ,WAAW,CAACd,cAAZ,CAA2BqB,UAA3B,KAA0CP,WAAW,CAACO,UAAD,CADxD,CAAJ,EAEO;QACL,IAAIA,UAAU,KAAKJ,aAAa,CAAC3B,QAAjC,EAA2C;UACzC,IAAIzC,gBAAgB,CAAC,OAAD,CAApB,EAA+B;YAC7BqD,wBAAwB,CAACC,kBAAzB,CAA4CmB,gBAA5C,CACEL,aAAa,CAAC3B,QADhB,EAEE,OAFF,EAGEO,OAHF;UAKD,CAND,MAMO,IAAIhD,gBAAgB,CAAC,YAAD,CAApB,EAAoC;YACzCqD,wBAAwB,CAACC,kBAAzB,CAA4CmB,gBAA5C,CACEL,aAAa,CAAC3B,QADhB,EAEE,YAFF,EAGEO,OAHF;UAKD,CANM,MAMA;YACL;YACA;YACAK,wBAAwB,CAACC,kBAAzB,CAA4CmB,gBAA5C,CACEL,aAAa,CAAC3B,QADhB,EAEE,gBAFF,EAGEO,OAHF;UAKD;QACF,CAtBD,MAsBO,IAAIwB,UAAU,KAAKJ,aAAa,CAAClC,SAAjC,EAA4C;UAEjD,IAAIlC,gBAAgB,CAAC,QAAD,EAAW,IAAX,CAApB,EAAsC;YACpCqD,wBAAwB,CAACC,kBAAzB,CAA4CoB,iBAA5C,CACEN,aAAa,CAAClC,SADhB,EAEE,QAFF,EAGEc,OAHF;UAKD,CAND,MAMO;YACLK,wBAAwB,CAACC,kBAAzB,CAA4CmB,gBAA5C,CACEL,aAAa,CAAClC,SADhB,EAEE,QAFF,EAGEmB,wBAAwB,CAACC,kBAAzB,CAA4CqB,aAH9C;UAKD;QACF,CAfM,MAeA,IAAIH,UAAU,KAAKJ,aAAa,CAAC7C,QAA7B,IACPiD,UAAU,KAAKJ,aAAa,CAAC/D,OAD1B,EACmC;UAExC,IAAIL,gBAAgB,CAAC,OAAD,EAAU,IAAV,CAApB,EAAqC;YACnCqD,wBAAwB,CAACC,kBAAzB,CAA4CoB,iBAA5C,CACEN,aAAa,CAAC7C,QADhB,EAEE,OAFF,EAGEyB,OAHF;YAKAK,wBAAwB,CAACC,kBAAzB,CAA4CoB,iBAA5C,CACEN,aAAa,CAAC/D,OADhB,EAEE,MAFF,EAGE2C,OAHF;UAKD,CAXD,MAWO,IAAIhD,gBAAgB,CAAC,SAAD,CAApB,EAAiC;YACtC;YACA;YACAqD,wBAAwB,CAACC,kBAAzB,CAA4CmB,gBAA5C,CACEL,aAAa,CAAC7C,QADhB,EAEE,SAFF,EAGEyB,OAHF;YAKAK,wBAAwB,CAACC,kBAAzB,CAA4CmB,gBAA5C,CACEL,aAAa,CAAC/D,OADhB,EAEE,UAFF,EAGE2C,OAHF;UAKD,CA1BuC,CA4BxC;;;UACAiB,WAAW,CAACG,aAAa,CAAC/D,OAAf,CAAX,GAAqC,IAArC;UACA4D,WAAW,CAACG,aAAa,CAAC7C,QAAf,CAAX,GAAsC,IAAtC;QACD,CAhCM,MAgCA,IAAInB,eAAe,CAAC+C,cAAhB,CAA+BqB,UAA/B,CAAJ,EAAgD;UACrDnB,wBAAwB,CAACC,kBAAzB,CAA4CmB,gBAA5C,CACED,UADF,EAEEpE,eAAe,CAACoE,UAAD,CAFjB,EAGExB,OAHF;QAKD;;QAEDiB,WAAW,CAACO,UAAD,CAAX,GAA0B,IAA1B;MACD;IACF;EACF,CAxJ+D;EA0JhEC,gBAAgB,EAAE,UAASG,YAAT,EAAuBC,eAAvB,EAAwCC,MAAxC,EAAgD;IAChE,OAAOzB,wBAAwB,CAACC,kBAAzB,CAA4CmB,gBAA5C,CACLG,YADK,EAELC,eAFK,EAGLC,MAHK,CAAP;EAKD,CAhK+D;EAkKhEJ,iBAAiB,EAAE,UAASE,YAAT,EAAuBC,eAAvB,EAAwCC,MAAxC,EAAgD;IACjE,OAAOzB,wBAAwB,CAACC,kBAAzB,CAA4CoB,iBAA5C,CACLE,YADK,EAELC,eAFK,EAGLC,MAHK,CAAP;EAKD,CAxK+D;;EA0KhE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,2BAA2B,EAAE,YAAW;IACtC,IAAI,CAAC7E,uBAAL,EAA8B;MAC5B,IAAI8E,OAAO,GAAGlF,eAAe,CAACmF,mBAA9B;MACA5B,wBAAwB,CAACC,kBAAzB,CAA4C4B,kBAA5C,CAA+DF,OAA/D;MACA9E,uBAAuB,GAAG,IAA1B;IACD;EACF,CAxL+D;EA0LhEiF,wBAAwB,EAAExF,cAAc,CAACwF,wBA1LuB;EA4LhEC,uBAAuB,EAAEzF,cAAc,CAACyF,uBA5LwB;EA8LhEC,WAAW,EAAE1F,cAAc,CAAC0F,WA9LoC;EAgMhEC,WAAW,EAAE3F,cAAc,CAAC2F,WAhMoC;EAkMhEC,cAAc,EAAE5F,cAAc,CAAC4F,cAlMiC;EAoMhEC,kBAAkB,EAAE7F,cAAc,CAAC6F;AApM6B,CAA7B,CAArC;AAwMAC,MAAM,CAACC,OAAP,GAAiBrC,wBAAjB"},"metadata":{},"sourceType":"script"}