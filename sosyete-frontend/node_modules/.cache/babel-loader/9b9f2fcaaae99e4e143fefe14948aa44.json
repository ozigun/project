{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactTransitionGroup\n */\n'use strict';\n\nvar React = require(\"./React\");\n\nvar ReactTransitionChildMapping = require(\"./ReactTransitionChildMapping\");\n\nvar assign = require(\"./Object.assign\");\n\nvar cloneWithProps = require(\"./cloneWithProps\");\n\nvar emptyFunction = require(\"./emptyFunction\");\n\nvar ReactTransitionGroup = React.createClass({\n  displayName: 'ReactTransitionGroup',\n  propTypes: {\n    component: React.PropTypes.any,\n    childFactory: React.PropTypes.func\n  },\n  getDefaultProps: function () {\n    return {\n      component: 'span',\n      childFactory: emptyFunction.thatReturnsArgument\n    };\n  },\n  getInitialState: function () {\n    return {\n      children: ReactTransitionChildMapping.getChildMapping(this.props.children)\n    };\n  },\n  componentWillMount: function () {\n    this.currentlyTransitioningKeys = {};\n    this.keysToEnter = [];\n    this.keysToLeave = [];\n  },\n  componentDidMount: function () {\n    var initialChildMapping = this.state.children;\n\n    for (var key in initialChildMapping) {\n      if (initialChildMapping[key]) {\n        this.performAppear(key);\n      }\n    }\n  },\n  componentWillReceiveProps: function (nextProps) {\n    var nextChildMapping = ReactTransitionChildMapping.getChildMapping(nextProps.children);\n    var prevChildMapping = this.state.children;\n    this.setState({\n      children: ReactTransitionChildMapping.mergeChildMappings(prevChildMapping, nextChildMapping)\n    });\n    var key;\n\n    for (key in nextChildMapping) {\n      var hasPrev = prevChildMapping && prevChildMapping.hasOwnProperty(key);\n\n      if (nextChildMapping[key] && !hasPrev && !this.currentlyTransitioningKeys[key]) {\n        this.keysToEnter.push(key);\n      }\n    }\n\n    for (key in prevChildMapping) {\n      var hasNext = nextChildMapping && nextChildMapping.hasOwnProperty(key);\n\n      if (prevChildMapping[key] && !hasNext && !this.currentlyTransitioningKeys[key]) {\n        this.keysToLeave.push(key);\n      }\n    } // If we want to someday check for reordering, we could do it here.\n\n  },\n  componentDidUpdate: function () {\n    var keysToEnter = this.keysToEnter;\n    this.keysToEnter = [];\n    keysToEnter.forEach(this.performEnter);\n    var keysToLeave = this.keysToLeave;\n    this.keysToLeave = [];\n    keysToLeave.forEach(this.performLeave);\n  },\n  performAppear: function (key) {\n    this.currentlyTransitioningKeys[key] = true;\n    var component = this.refs[key];\n\n    if (component.componentWillAppear) {\n      component.componentWillAppear(this._handleDoneAppearing.bind(this, key));\n    } else {\n      this._handleDoneAppearing(key);\n    }\n  },\n  _handleDoneAppearing: function (key) {\n    var component = this.refs[key];\n\n    if (component.componentDidAppear) {\n      component.componentDidAppear();\n    }\n\n    delete this.currentlyTransitioningKeys[key];\n    var currentChildMapping = ReactTransitionChildMapping.getChildMapping(this.props.children);\n\n    if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {\n      // This was removed before it had fully appeared. Remove it.\n      this.performLeave(key);\n    }\n  },\n  performEnter: function (key) {\n    this.currentlyTransitioningKeys[key] = true;\n    var component = this.refs[key];\n\n    if (component.componentWillEnter) {\n      component.componentWillEnter(this._handleDoneEntering.bind(this, key));\n    } else {\n      this._handleDoneEntering(key);\n    }\n  },\n  _handleDoneEntering: function (key) {\n    var component = this.refs[key];\n\n    if (component.componentDidEnter) {\n      component.componentDidEnter();\n    }\n\n    delete this.currentlyTransitioningKeys[key];\n    var currentChildMapping = ReactTransitionChildMapping.getChildMapping(this.props.children);\n\n    if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {\n      // This was removed before it had fully entered. Remove it.\n      this.performLeave(key);\n    }\n  },\n  performLeave: function (key) {\n    this.currentlyTransitioningKeys[key] = true;\n    var component = this.refs[key];\n\n    if (component.componentWillLeave) {\n      component.componentWillLeave(this._handleDoneLeaving.bind(this, key));\n    } else {\n      // Note that this is somewhat dangerous b/c it calls setState()\n      // again, effectively mutating the component before all the work\n      // is done.\n      this._handleDoneLeaving(key);\n    }\n  },\n  _handleDoneLeaving: function (key) {\n    var component = this.refs[key];\n\n    if (component.componentDidLeave) {\n      component.componentDidLeave();\n    }\n\n    delete this.currentlyTransitioningKeys[key];\n    var currentChildMapping = ReactTransitionChildMapping.getChildMapping(this.props.children);\n\n    if (currentChildMapping && currentChildMapping.hasOwnProperty(key)) {\n      // This entered again before it fully left. Add it again.\n      this.performEnter(key);\n    } else {\n      var newChildren = assign({}, this.state.children);\n      delete newChildren[key];\n      this.setState({\n        children: newChildren\n      });\n    }\n  },\n  render: function () {\n    // TODO: we could get rid of the need for the wrapper node\n    // by cloning a single child\n    var childrenToRender = [];\n\n    for (var key in this.state.children) {\n      var child = this.state.children[key];\n\n      if (child) {\n        // You may need to apply reactive updates to a child as it is leaving.\n        // The normal React way to do it won't work since the child will have\n        // already been removed. In case you need this behavior you can provide\n        // a childFactory function to wrap every child, even the ones that are\n        // leaving.\n        childrenToRender.push(cloneWithProps(this.props.childFactory(child), {\n          ref: key,\n          key: key\n        }));\n      }\n    }\n\n    return React.createElement(this.props.component, this.props, childrenToRender);\n  }\n});\nmodule.exports = ReactTransitionGroup;","map":{"version":3,"names":["React","require","ReactTransitionChildMapping","assign","cloneWithProps","emptyFunction","ReactTransitionGroup","createClass","displayName","propTypes","component","PropTypes","any","childFactory","func","getDefaultProps","thatReturnsArgument","getInitialState","children","getChildMapping","props","componentWillMount","currentlyTransitioningKeys","keysToEnter","keysToLeave","componentDidMount","initialChildMapping","state","key","performAppear","componentWillReceiveProps","nextProps","nextChildMapping","prevChildMapping","setState","mergeChildMappings","hasPrev","hasOwnProperty","push","hasNext","componentDidUpdate","forEach","performEnter","performLeave","refs","componentWillAppear","_handleDoneAppearing","bind","componentDidAppear","currentChildMapping","componentWillEnter","_handleDoneEntering","componentDidEnter","componentWillLeave","_handleDoneLeaving","componentDidLeave","newChildren","render","childrenToRender","child","ref","createElement","module","exports"],"sources":["/Users/ozigun1988/Desktop/git/project/sosyete-frontend/node_modules/react-upvote/node_modules/react/lib/ReactTransitionGroup.js"],"sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactTransitionGroup\n */\n\n'use strict';\n\nvar React = require(\"./React\");\nvar ReactTransitionChildMapping = require(\"./ReactTransitionChildMapping\");\n\nvar assign = require(\"./Object.assign\");\nvar cloneWithProps = require(\"./cloneWithProps\");\nvar emptyFunction = require(\"./emptyFunction\");\n\nvar ReactTransitionGroup = React.createClass({\n  displayName: 'ReactTransitionGroup',\n\n  propTypes: {\n    component: React.PropTypes.any,\n    childFactory: React.PropTypes.func\n  },\n\n  getDefaultProps: function() {\n    return {\n      component: 'span',\n      childFactory: emptyFunction.thatReturnsArgument\n    };\n  },\n\n  getInitialState: function() {\n    return {\n      children: ReactTransitionChildMapping.getChildMapping(this.props.children)\n    };\n  },\n\n  componentWillMount: function() {\n    this.currentlyTransitioningKeys = {};\n    this.keysToEnter = [];\n    this.keysToLeave = [];\n  },\n\n  componentDidMount: function() {\n    var initialChildMapping = this.state.children;\n    for (var key in initialChildMapping) {\n      if (initialChildMapping[key]) {\n        this.performAppear(key);\n      }\n    }\n  },\n\n  componentWillReceiveProps: function(nextProps) {\n    var nextChildMapping = ReactTransitionChildMapping.getChildMapping(\n      nextProps.children\n    );\n    var prevChildMapping = this.state.children;\n\n    this.setState({\n      children: ReactTransitionChildMapping.mergeChildMappings(\n        prevChildMapping,\n        nextChildMapping\n      )\n    });\n\n    var key;\n\n    for (key in nextChildMapping) {\n      var hasPrev = prevChildMapping && prevChildMapping.hasOwnProperty(key);\n      if (nextChildMapping[key] && !hasPrev &&\n          !this.currentlyTransitioningKeys[key]) {\n        this.keysToEnter.push(key);\n      }\n    }\n\n    for (key in prevChildMapping) {\n      var hasNext = nextChildMapping && nextChildMapping.hasOwnProperty(key);\n      if (prevChildMapping[key] && !hasNext &&\n          !this.currentlyTransitioningKeys[key]) {\n        this.keysToLeave.push(key);\n      }\n    }\n\n    // If we want to someday check for reordering, we could do it here.\n  },\n\n  componentDidUpdate: function() {\n    var keysToEnter = this.keysToEnter;\n    this.keysToEnter = [];\n    keysToEnter.forEach(this.performEnter);\n\n    var keysToLeave = this.keysToLeave;\n    this.keysToLeave = [];\n    keysToLeave.forEach(this.performLeave);\n  },\n\n  performAppear: function(key) {\n    this.currentlyTransitioningKeys[key] = true;\n\n    var component = this.refs[key];\n\n    if (component.componentWillAppear) {\n      component.componentWillAppear(\n        this._handleDoneAppearing.bind(this, key)\n      );\n    } else {\n      this._handleDoneAppearing(key);\n    }\n  },\n\n  _handleDoneAppearing: function(key) {\n    var component = this.refs[key];\n    if (component.componentDidAppear) {\n      component.componentDidAppear();\n    }\n\n    delete this.currentlyTransitioningKeys[key];\n\n    var currentChildMapping = ReactTransitionChildMapping.getChildMapping(\n      this.props.children\n    );\n\n    if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {\n      // This was removed before it had fully appeared. Remove it.\n      this.performLeave(key);\n    }\n  },\n\n  performEnter: function(key) {\n    this.currentlyTransitioningKeys[key] = true;\n\n    var component = this.refs[key];\n\n    if (component.componentWillEnter) {\n      component.componentWillEnter(\n        this._handleDoneEntering.bind(this, key)\n      );\n    } else {\n      this._handleDoneEntering(key);\n    }\n  },\n\n  _handleDoneEntering: function(key) {\n    var component = this.refs[key];\n    if (component.componentDidEnter) {\n      component.componentDidEnter();\n    }\n\n    delete this.currentlyTransitioningKeys[key];\n\n    var currentChildMapping = ReactTransitionChildMapping.getChildMapping(\n      this.props.children\n    );\n\n    if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {\n      // This was removed before it had fully entered. Remove it.\n      this.performLeave(key);\n    }\n  },\n\n  performLeave: function(key) {\n    this.currentlyTransitioningKeys[key] = true;\n\n    var component = this.refs[key];\n    if (component.componentWillLeave) {\n      component.componentWillLeave(this._handleDoneLeaving.bind(this, key));\n    } else {\n      // Note that this is somewhat dangerous b/c it calls setState()\n      // again, effectively mutating the component before all the work\n      // is done.\n      this._handleDoneLeaving(key);\n    }\n  },\n\n  _handleDoneLeaving: function(key) {\n    var component = this.refs[key];\n\n    if (component.componentDidLeave) {\n      component.componentDidLeave();\n    }\n\n    delete this.currentlyTransitioningKeys[key];\n\n    var currentChildMapping = ReactTransitionChildMapping.getChildMapping(\n      this.props.children\n    );\n\n    if (currentChildMapping && currentChildMapping.hasOwnProperty(key)) {\n      // This entered again before it fully left. Add it again.\n      this.performEnter(key);\n    } else {\n      var newChildren = assign({}, this.state.children);\n      delete newChildren[key];\n      this.setState({children: newChildren});\n    }\n  },\n\n  render: function() {\n    // TODO: we could get rid of the need for the wrapper node\n    // by cloning a single child\n    var childrenToRender = [];\n    for (var key in this.state.children) {\n      var child = this.state.children[key];\n      if (child) {\n        // You may need to apply reactive updates to a child as it is leaving.\n        // The normal React way to do it won't work since the child will have\n        // already been removed. In case you need this behavior you can provide\n        // a childFactory function to wrap every child, even the ones that are\n        // leaving.\n        childrenToRender.push(cloneWithProps(\n          this.props.childFactory(child),\n          {ref: key, key: key}\n        ));\n      }\n    }\n    return React.createElement(\n      this.props.component,\n      this.props,\n      childrenToRender\n    );\n  }\n});\n\nmodule.exports = ReactTransitionGroup;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}