{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventPluginUtils\n */\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\n\nvar invariant = require(\"./invariant\");\n/**\n * Injected dependencies:\n */\n\n/**\n * - `Mount`: [required] Module that can convert between React dom IDs and\n *   actual node references.\n */\n\n\nvar injection = {\n  Mount: null,\n  injectMount: function (InjectedMount) {\n    injection.Mount = InjectedMount;\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      \"production\" !== process.env.NODE_ENV ? invariant(InjectedMount && InjectedMount.getNode, 'EventPluginUtils.injection.injectMount(...): Injected Mount module ' + 'is missing getNode.') : invariant(InjectedMount && InjectedMount.getNode);\n    }\n  }\n};\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nfunction isEndish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseUp || topLevelType === topLevelTypes.topTouchEnd || topLevelType === topLevelTypes.topTouchCancel;\n}\n\nfunction isMoveish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseMove || topLevelType === topLevelTypes.topTouchMove;\n}\n\nfunction isStartish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseDown || topLevelType === topLevelTypes.topTouchStart;\n}\n\nvar validateEventDispatches;\n\nif (\"production\" !== process.env.NODE_ENV) {\n  validateEventDispatches = function (event) {\n    var dispatchListeners = event._dispatchListeners;\n    var dispatchIDs = event._dispatchIDs;\n    var listenersIsArr = Array.isArray(dispatchListeners);\n    var idsIsArr = Array.isArray(dispatchIDs);\n    var IDsLen = idsIsArr ? dispatchIDs.length : dispatchIDs ? 1 : 0;\n    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;\n    \"production\" !== process.env.NODE_ENV ? invariant(idsIsArr === listenersIsArr && IDsLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : invariant(idsIsArr === listenersIsArr && IDsLen === listenersLen);\n  };\n}\n/**\n * Invokes `cb(event, listener, id)`. Avoids using call if no scope is\n * provided. The `(listener,id)` pair effectively forms the \"dispatch\" but are\n * kept separate to conserve memory.\n */\n\n\nfunction forEachEventDispatch(event, cb) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchIDs = event._dispatchIDs;\n\n  if (\"production\" !== process.env.NODE_ENV) {\n    validateEventDispatches(event);\n  }\n\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      } // Listeners and IDs are two parallel arrays that are always in sync.\n\n\n      cb(event, dispatchListeners[i], dispatchIDs[i]);\n    }\n  } else if (dispatchListeners) {\n    cb(event, dispatchListeners, dispatchIDs);\n  }\n}\n/**\n * Default implementation of PluginModule.executeDispatch().\n * @param {SyntheticEvent} SyntheticEvent to handle\n * @param {function} Application-level callback\n * @param {string} domID DOM id to pass to the callback.\n */\n\n\nfunction executeDispatch(event, listener, domID) {\n  event.currentTarget = injection.Mount.getNode(domID);\n  var returnValue = listener(event, domID);\n  event.currentTarget = null;\n  return returnValue;\n}\n/**\n * Standard/simple iteration through an event's collected dispatches.\n */\n\n\nfunction executeDispatchesInOrder(event, cb) {\n  forEachEventDispatch(event, cb);\n  event._dispatchListeners = null;\n  event._dispatchIDs = null;\n}\n/**\n * Standard/simple iteration through an event's collected dispatches, but stops\n * at the first dispatch execution returning true, and returns that id.\n *\n * @return id of the first dispatch execution who's listener returns true, or\n * null if no listener returned true.\n */\n\n\nfunction executeDispatchesInOrderStopAtTrueImpl(event) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchIDs = event._dispatchIDs;\n\n  if (\"production\" !== process.env.NODE_ENV) {\n    validateEventDispatches(event);\n  }\n\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      } // Listeners and IDs are two parallel arrays that are always in sync.\n\n\n      if (dispatchListeners[i](event, dispatchIDs[i])) {\n        return dispatchIDs[i];\n      }\n    }\n  } else if (dispatchListeners) {\n    if (dispatchListeners(event, dispatchIDs)) {\n      return dispatchIDs;\n    }\n  }\n\n  return null;\n}\n/**\n * @see executeDispatchesInOrderStopAtTrueImpl\n */\n\n\nfunction executeDispatchesInOrderStopAtTrue(event) {\n  var ret = executeDispatchesInOrderStopAtTrueImpl(event);\n  event._dispatchIDs = null;\n  event._dispatchListeners = null;\n  return ret;\n}\n/**\n * Execution of a \"direct\" dispatch - there must be at most one dispatch\n * accumulated on the event or it is considered an error. It doesn't really make\n * sense for an event with multiple dispatches (bubbled) to keep track of the\n * return values at each dispatch execution, but it does tend to make sense when\n * dealing with \"direct\" dispatches.\n *\n * @return The return value of executing the single dispatch.\n */\n\n\nfunction executeDirectDispatch(event) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    validateEventDispatches(event);\n  }\n\n  var dispatchListener = event._dispatchListeners;\n  var dispatchID = event._dispatchIDs;\n  \"production\" !== process.env.NODE_ENV ? invariant(!Array.isArray(dispatchListener), 'executeDirectDispatch(...): Invalid `event`.') : invariant(!Array.isArray(dispatchListener));\n  var res = dispatchListener ? dispatchListener(event, dispatchID) : null;\n  event._dispatchListeners = null;\n  event._dispatchIDs = null;\n  return res;\n}\n/**\n * @param {SyntheticEvent} event\n * @return {bool} True iff number of dispatches accumulated is greater than 0.\n */\n\n\nfunction hasDispatches(event) {\n  return !!event._dispatchListeners;\n}\n/**\n * General utilities that are useful in creating custom Event Plugins.\n */\n\n\nvar EventPluginUtils = {\n  isEndish: isEndish,\n  isMoveish: isMoveish,\n  isStartish: isStartish,\n  executeDirectDispatch: executeDirectDispatch,\n  executeDispatch: executeDispatch,\n  executeDispatchesInOrder: executeDispatchesInOrder,\n  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,\n  hasDispatches: hasDispatches,\n  injection: injection,\n  useTouchEvents: false\n};\nmodule.exports = EventPluginUtils;","map":{"version":3,"names":["EventConstants","require","invariant","injection","Mount","injectMount","InjectedMount","process","env","NODE_ENV","getNode","topLevelTypes","isEndish","topLevelType","topMouseUp","topTouchEnd","topTouchCancel","isMoveish","topMouseMove","topTouchMove","isStartish","topMouseDown","topTouchStart","validateEventDispatches","event","dispatchListeners","_dispatchListeners","dispatchIDs","_dispatchIDs","listenersIsArr","Array","isArray","idsIsArr","IDsLen","length","listenersLen","forEachEventDispatch","cb","i","isPropagationStopped","executeDispatch","listener","domID","currentTarget","returnValue","executeDispatchesInOrder","executeDispatchesInOrderStopAtTrueImpl","executeDispatchesInOrderStopAtTrue","ret","executeDirectDispatch","dispatchListener","dispatchID","res","hasDispatches","EventPluginUtils","useTouchEvents","module","exports"],"sources":["/Users/ozigun1988/Desktop/git/project/sosyete-frontend/node_modules/react-upvote/node_modules/react/lib/EventPluginUtils.js"],"sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventPluginUtils\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\n\nvar invariant = require(\"./invariant\");\n\n/**\n * Injected dependencies:\n */\n\n/**\n * - `Mount`: [required] Module that can convert between React dom IDs and\n *   actual node references.\n */\nvar injection = {\n  Mount: null,\n  injectMount: function(InjectedMount) {\n    injection.Mount = InjectedMount;\n    if (\"production\" !== process.env.NODE_ENV) {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        InjectedMount && InjectedMount.getNode,\n        'EventPluginUtils.injection.injectMount(...): Injected Mount module ' +\n        'is missing getNode.'\n      ) : invariant(InjectedMount && InjectedMount.getNode));\n    }\n  }\n};\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nfunction isEndish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseUp ||\n         topLevelType === topLevelTypes.topTouchEnd ||\n         topLevelType === topLevelTypes.topTouchCancel;\n}\n\nfunction isMoveish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseMove ||\n         topLevelType === topLevelTypes.topTouchMove;\n}\nfunction isStartish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseDown ||\n         topLevelType === topLevelTypes.topTouchStart;\n}\n\n\nvar validateEventDispatches;\nif (\"production\" !== process.env.NODE_ENV) {\n  validateEventDispatches = function(event) {\n    var dispatchListeners = event._dispatchListeners;\n    var dispatchIDs = event._dispatchIDs;\n\n    var listenersIsArr = Array.isArray(dispatchListeners);\n    var idsIsArr = Array.isArray(dispatchIDs);\n    var IDsLen = idsIsArr ? dispatchIDs.length : dispatchIDs ? 1 : 0;\n    var listenersLen = listenersIsArr ?\n      dispatchListeners.length :\n      dispatchListeners ? 1 : 0;\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      idsIsArr === listenersIsArr && IDsLen === listenersLen,\n      'EventPluginUtils: Invalid `event`.'\n    ) : invariant(idsIsArr === listenersIsArr && IDsLen === listenersLen));\n  };\n}\n\n/**\n * Invokes `cb(event, listener, id)`. Avoids using call if no scope is\n * provided. The `(listener,id)` pair effectively forms the \"dispatch\" but are\n * kept separate to conserve memory.\n */\nfunction forEachEventDispatch(event, cb) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchIDs = event._dispatchIDs;\n  if (\"production\" !== process.env.NODE_ENV) {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and IDs are two parallel arrays that are always in sync.\n      cb(event, dispatchListeners[i], dispatchIDs[i]);\n    }\n  } else if (dispatchListeners) {\n    cb(event, dispatchListeners, dispatchIDs);\n  }\n}\n\n/**\n * Default implementation of PluginModule.executeDispatch().\n * @param {SyntheticEvent} SyntheticEvent to handle\n * @param {function} Application-level callback\n * @param {string} domID DOM id to pass to the callback.\n */\nfunction executeDispatch(event, listener, domID) {\n  event.currentTarget = injection.Mount.getNode(domID);\n  var returnValue = listener(event, domID);\n  event.currentTarget = null;\n  return returnValue;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches.\n */\nfunction executeDispatchesInOrder(event, cb) {\n  forEachEventDispatch(event, cb);\n  event._dispatchListeners = null;\n  event._dispatchIDs = null;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches, but stops\n * at the first dispatch execution returning true, and returns that id.\n *\n * @return id of the first dispatch execution who's listener returns true, or\n * null if no listener returned true.\n */\nfunction executeDispatchesInOrderStopAtTrueImpl(event) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchIDs = event._dispatchIDs;\n  if (\"production\" !== process.env.NODE_ENV) {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and IDs are two parallel arrays that are always in sync.\n      if (dispatchListeners[i](event, dispatchIDs[i])) {\n        return dispatchIDs[i];\n      }\n    }\n  } else if (dispatchListeners) {\n    if (dispatchListeners(event, dispatchIDs)) {\n      return dispatchIDs;\n    }\n  }\n  return null;\n}\n\n/**\n * @see executeDispatchesInOrderStopAtTrueImpl\n */\nfunction executeDispatchesInOrderStopAtTrue(event) {\n  var ret = executeDispatchesInOrderStopAtTrueImpl(event);\n  event._dispatchIDs = null;\n  event._dispatchListeners = null;\n  return ret;\n}\n\n/**\n * Execution of a \"direct\" dispatch - there must be at most one dispatch\n * accumulated on the event or it is considered an error. It doesn't really make\n * sense for an event with multiple dispatches (bubbled) to keep track of the\n * return values at each dispatch execution, but it does tend to make sense when\n * dealing with \"direct\" dispatches.\n *\n * @return The return value of executing the single dispatch.\n */\nfunction executeDirectDispatch(event) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    validateEventDispatches(event);\n  }\n  var dispatchListener = event._dispatchListeners;\n  var dispatchID = event._dispatchIDs;\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    !Array.isArray(dispatchListener),\n    'executeDirectDispatch(...): Invalid `event`.'\n  ) : invariant(!Array.isArray(dispatchListener)));\n  var res = dispatchListener ?\n    dispatchListener(event, dispatchID) :\n    null;\n  event._dispatchListeners = null;\n  event._dispatchIDs = null;\n  return res;\n}\n\n/**\n * @param {SyntheticEvent} event\n * @return {bool} True iff number of dispatches accumulated is greater than 0.\n */\nfunction hasDispatches(event) {\n  return !!event._dispatchListeners;\n}\n\n/**\n * General utilities that are useful in creating custom Event Plugins.\n */\nvar EventPluginUtils = {\n  isEndish: isEndish,\n  isMoveish: isMoveish,\n  isStartish: isStartish,\n\n  executeDirectDispatch: executeDirectDispatch,\n  executeDispatch: executeDispatch,\n  executeDispatchesInOrder: executeDispatchesInOrder,\n  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,\n  hasDispatches: hasDispatches,\n  injection: injection,\n  useTouchEvents: false\n};\n\nmodule.exports = EventPluginUtils;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}