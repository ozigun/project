{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule shouldUpdateReactComponent\n * @typechecks static-only\n */\n'use strict';\n\nvar warning = require(\"./warning\");\n/**\n * Given a `prevElement` and `nextElement`, determines if the existing\n * instance should be updated as opposed to being destroyed or replaced by a new\n * instance. Both arguments are elements. This ensures that this logic can\n * operate on stateless trees without any backing instance.\n *\n * @param {?object} prevElement\n * @param {?object} nextElement\n * @return {boolean} True if the existing instance should be updated.\n * @protected\n */\n\n\nfunction shouldUpdateReactComponent(prevElement, nextElement) {\n  if (prevElement != null && nextElement != null) {\n    var prevType = typeof prevElement;\n    var nextType = typeof nextElement;\n\n    if (prevType === 'string' || prevType === 'number') {\n      return nextType === 'string' || nextType === 'number';\n    } else {\n      if (nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key) {\n        var ownersMatch = prevElement._owner === nextElement._owner;\n        var prevName = null;\n        var nextName = null;\n        var nextDisplayName = null;\n\n        if (\"production\" !== process.env.NODE_ENV) {\n          if (!ownersMatch) {\n            if (prevElement._owner != null && prevElement._owner.getPublicInstance() != null && prevElement._owner.getPublicInstance().constructor != null) {\n              prevName = prevElement._owner.getPublicInstance().constructor.displayName;\n            }\n\n            if (nextElement._owner != null && nextElement._owner.getPublicInstance() != null && nextElement._owner.getPublicInstance().constructor != null) {\n              nextName = nextElement._owner.getPublicInstance().constructor.displayName;\n            }\n\n            if (nextElement.type != null && nextElement.type.displayName != null) {\n              nextDisplayName = nextElement.type.displayName;\n            }\n\n            if (nextElement.type != null && typeof nextElement.type === 'string') {\n              nextDisplayName = nextElement.type;\n            }\n\n            if (typeof nextElement.type !== 'string' || nextElement.type === 'input' || nextElement.type === 'textarea') {\n              if (prevElement._owner != null && prevElement._owner._isOwnerNecessary === false || nextElement._owner != null && nextElement._owner._isOwnerNecessary === false) {\n                if (prevElement._owner != null) {\n                  prevElement._owner._isOwnerNecessary = true;\n                }\n\n                if (nextElement._owner != null) {\n                  nextElement._owner._isOwnerNecessary = true;\n                }\n\n                \"production\" !== process.env.NODE_ENV ? warning(false, '<%s /> is being rendered by both %s and %s using the same ' + 'key (%s) in the same place. Currently, this means that ' + 'they don\\'t preserve state. This behavior should be very ' + 'rare so we\\'re considering deprecating it. Please contact ' + 'the React team and explain your use case so that we can ' + 'take that into consideration.', nextDisplayName || 'Unknown Component', prevName || '[Unknown]', nextName || '[Unknown]', prevElement.key) : null;\n              }\n            }\n          }\n        }\n\n        return ownersMatch;\n      }\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = shouldUpdateReactComponent;","map":{"version":3,"names":["warning","require","shouldUpdateReactComponent","prevElement","nextElement","prevType","nextType","type","key","ownersMatch","_owner","prevName","nextName","nextDisplayName","process","env","NODE_ENV","getPublicInstance","constructor","displayName","_isOwnerNecessary","module","exports"],"sources":["/Users/ozigun1988/Desktop/git/project/sosyete-frontend/node_modules/react-upvote/node_modules/react/lib/shouldUpdateReactComponent.js"],"sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule shouldUpdateReactComponent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar warning = require(\"./warning\");\n\n/**\n * Given a `prevElement` and `nextElement`, determines if the existing\n * instance should be updated as opposed to being destroyed or replaced by a new\n * instance. Both arguments are elements. This ensures that this logic can\n * operate on stateless trees without any backing instance.\n *\n * @param {?object} prevElement\n * @param {?object} nextElement\n * @return {boolean} True if the existing instance should be updated.\n * @protected\n */\nfunction shouldUpdateReactComponent(prevElement, nextElement) {\n  if (prevElement != null && nextElement != null) {\n    var prevType = typeof prevElement;\n    var nextType = typeof nextElement;\n    if (prevType === 'string' || prevType === 'number') {\n      return (nextType === 'string' || nextType === 'number');\n    } else {\n      if (nextType === 'object' &&\n          prevElement.type === nextElement.type &&\n          prevElement.key === nextElement.key) {\n        var ownersMatch = prevElement._owner === nextElement._owner;\n        var prevName = null;\n        var nextName = null;\n        var nextDisplayName = null;\n        if (\"production\" !== process.env.NODE_ENV) {\n          if (!ownersMatch) {\n            if (prevElement._owner != null &&\n                prevElement._owner.getPublicInstance() != null &&\n                prevElement._owner.getPublicInstance().constructor != null) {\n              prevName =\n                prevElement._owner.getPublicInstance().constructor.displayName;\n            }\n            if (nextElement._owner != null &&\n                nextElement._owner.getPublicInstance() != null &&\n                nextElement._owner.getPublicInstance().constructor != null) {\n              nextName =\n                nextElement._owner.getPublicInstance().constructor.displayName;\n            }\n            if (nextElement.type != null &&\n                nextElement.type.displayName != null) {\n              nextDisplayName = nextElement.type.displayName;\n            }\n            if (nextElement.type != null && typeof nextElement.type === 'string') {\n              nextDisplayName = nextElement.type;\n            }\n            if (typeof nextElement.type !== 'string' ||\n                nextElement.type === 'input' ||\n                nextElement.type === 'textarea') {\n              if ((prevElement._owner != null &&\n                  prevElement._owner._isOwnerNecessary === false) ||\n                  (nextElement._owner != null &&\n                  nextElement._owner._isOwnerNecessary === false)) {\n                if (prevElement._owner != null) {\n                  prevElement._owner._isOwnerNecessary = true;\n                }\n                if (nextElement._owner != null) {\n                  nextElement._owner._isOwnerNecessary = true;\n                }\n                (\"production\" !== process.env.NODE_ENV ? warning(\n                  false,\n                  '<%s /> is being rendered by both %s and %s using the same ' +\n                  'key (%s) in the same place. Currently, this means that ' +\n                  'they don\\'t preserve state. This behavior should be very ' +\n                  'rare so we\\'re considering deprecating it. Please contact ' +\n                  'the React team and explain your use case so that we can ' +\n                  'take that into consideration.',\n                  nextDisplayName || 'Unknown Component',\n                  prevName || '[Unknown]',\n                  nextName || '[Unknown]',\n                  prevElement.key\n                ) : null);\n              }\n            }\n          }\n        }\n        return ownersMatch;\n      }\n    }\n  }\n  return false;\n}\n\nmodule.exports = shouldUpdateReactComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}