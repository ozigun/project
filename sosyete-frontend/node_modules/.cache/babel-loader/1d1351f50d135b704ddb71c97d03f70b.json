{"ast":null,"code":"/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactServerRenderingTransaction\n * @typechecks\n */\n'use strict';\n\nvar PooledClass = require(\"./PooledClass\");\n\nvar CallbackQueue = require(\"./CallbackQueue\");\n\nvar ReactPutListenerQueue = require(\"./ReactPutListenerQueue\");\n\nvar Transaction = require(\"./Transaction\");\n\nvar assign = require(\"./Object.assign\");\n\nvar emptyFunction = require(\"./emptyFunction\");\n/**\n * Provides a `CallbackQueue` queue for collecting `onDOMReady` callbacks\n * during the performing of the transaction.\n */\n\n\nvar ON_DOM_READY_QUEUEING = {\n  /**\n   * Initializes the internal `onDOMReady` queue.\n   */\n  initialize: function () {\n    this.reactMountReady.reset();\n  },\n  close: emptyFunction\n};\nvar PUT_LISTENER_QUEUEING = {\n  initialize: function () {\n    this.putListenerQueue.reset();\n  },\n  close: emptyFunction\n};\n/**\n * Executed within the scope of the `Transaction` instance. Consider these as\n * being member methods, but with an implied ordering while being isolated from\n * each other.\n */\n\nvar TRANSACTION_WRAPPERS = [PUT_LISTENER_QUEUEING, ON_DOM_READY_QUEUEING];\n/**\n * @class ReactServerRenderingTransaction\n * @param {boolean} renderToStaticMarkup\n */\n\nfunction ReactServerRenderingTransaction(renderToStaticMarkup) {\n  this.reinitializeTransaction();\n  this.renderToStaticMarkup = renderToStaticMarkup;\n  this.reactMountReady = CallbackQueue.getPooled(null);\n  this.putListenerQueue = ReactPutListenerQueue.getPooled();\n}\n\nvar Mixin = {\n  /**\n   * @see Transaction\n   * @abstract\n   * @final\n   * @return {array} Empty list of operation wrap proceedures.\n   */\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  /**\n   * @return {object} The queue to collect `onDOMReady` callbacks with.\n   */\n  getReactMountReady: function () {\n    return this.reactMountReady;\n  },\n  getPutListenerQueue: function () {\n    return this.putListenerQueue;\n  },\n\n  /**\n   * `PooledClass` looks for this, and will invoke this before allowing this\n   * instance to be resused.\n   */\n  destructor: function () {\n    CallbackQueue.release(this.reactMountReady);\n    this.reactMountReady = null;\n    ReactPutListenerQueue.release(this.putListenerQueue);\n    this.putListenerQueue = null;\n  }\n};\nassign(ReactServerRenderingTransaction.prototype, Transaction.Mixin, Mixin);\nPooledClass.addPoolingTo(ReactServerRenderingTransaction);\nmodule.exports = ReactServerRenderingTransaction;","map":{"version":3,"names":["PooledClass","require","CallbackQueue","ReactPutListenerQueue","Transaction","assign","emptyFunction","ON_DOM_READY_QUEUEING","initialize","reactMountReady","reset","close","PUT_LISTENER_QUEUEING","putListenerQueue","TRANSACTION_WRAPPERS","ReactServerRenderingTransaction","renderToStaticMarkup","reinitializeTransaction","getPooled","Mixin","getTransactionWrappers","getReactMountReady","getPutListenerQueue","destructor","release","prototype","addPoolingTo","module","exports"],"sources":["/Users/ozigun1988/Desktop/git/project/sosyete-frontend/node_modules/react-upvote/node_modules/react/lib/ReactServerRenderingTransaction.js"],"sourcesContent":["/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactServerRenderingTransaction\n * @typechecks\n */\n\n'use strict';\n\nvar PooledClass = require(\"./PooledClass\");\nvar CallbackQueue = require(\"./CallbackQueue\");\nvar ReactPutListenerQueue = require(\"./ReactPutListenerQueue\");\nvar Transaction = require(\"./Transaction\");\n\nvar assign = require(\"./Object.assign\");\nvar emptyFunction = require(\"./emptyFunction\");\n\n/**\n * Provides a `CallbackQueue` queue for collecting `onDOMReady` callbacks\n * during the performing of the transaction.\n */\nvar ON_DOM_READY_QUEUEING = {\n  /**\n   * Initializes the internal `onDOMReady` queue.\n   */\n  initialize: function() {\n    this.reactMountReady.reset();\n  },\n\n  close: emptyFunction\n};\n\nvar PUT_LISTENER_QUEUEING = {\n  initialize: function() {\n    this.putListenerQueue.reset();\n  },\n\n  close: emptyFunction\n};\n\n/**\n * Executed within the scope of the `Transaction` instance. Consider these as\n * being member methods, but with an implied ordering while being isolated from\n * each other.\n */\nvar TRANSACTION_WRAPPERS = [\n  PUT_LISTENER_QUEUEING,\n  ON_DOM_READY_QUEUEING\n];\n\n/**\n * @class ReactServerRenderingTransaction\n * @param {boolean} renderToStaticMarkup\n */\nfunction ReactServerRenderingTransaction(renderToStaticMarkup) {\n  this.reinitializeTransaction();\n  this.renderToStaticMarkup = renderToStaticMarkup;\n  this.reactMountReady = CallbackQueue.getPooled(null);\n  this.putListenerQueue = ReactPutListenerQueue.getPooled();\n}\n\nvar Mixin = {\n  /**\n   * @see Transaction\n   * @abstract\n   * @final\n   * @return {array} Empty list of operation wrap proceedures.\n   */\n  getTransactionWrappers: function() {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  /**\n   * @return {object} The queue to collect `onDOMReady` callbacks with.\n   */\n  getReactMountReady: function() {\n    return this.reactMountReady;\n  },\n\n  getPutListenerQueue: function() {\n    return this.putListenerQueue;\n  },\n\n  /**\n   * `PooledClass` looks for this, and will invoke this before allowing this\n   * instance to be resused.\n   */\n  destructor: function() {\n    CallbackQueue.release(this.reactMountReady);\n    this.reactMountReady = null;\n\n    ReactPutListenerQueue.release(this.putListenerQueue);\n    this.putListenerQueue = null;\n  }\n};\n\n\nassign(\n  ReactServerRenderingTransaction.prototype,\n  Transaction.Mixin,\n  Mixin\n);\n\nPooledClass.addPoolingTo(ReactServerRenderingTransaction);\n\nmodule.exports = ReactServerRenderingTransaction;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,WAAW,GAAGC,OAAO,CAAC,eAAD,CAAzB;;AACA,IAAIC,aAAa,GAAGD,OAAO,CAAC,iBAAD,CAA3B;;AACA,IAAIE,qBAAqB,GAAGF,OAAO,CAAC,yBAAD,CAAnC;;AACA,IAAIG,WAAW,GAAGH,OAAO,CAAC,eAAD,CAAzB;;AAEA,IAAII,MAAM,GAAGJ,OAAO,CAAC,iBAAD,CAApB;;AACA,IAAIK,aAAa,GAAGL,OAAO,CAAC,iBAAD,CAA3B;AAEA;AACA;AACA;AACA;;;AACA,IAAIM,qBAAqB,GAAG;EAC1B;AACF;AACA;EACEC,UAAU,EAAE,YAAW;IACrB,KAAKC,eAAL,CAAqBC,KAArB;EACD,CANyB;EAQ1BC,KAAK,EAAEL;AARmB,CAA5B;AAWA,IAAIM,qBAAqB,GAAG;EAC1BJ,UAAU,EAAE,YAAW;IACrB,KAAKK,gBAAL,CAAsBH,KAAtB;EACD,CAHyB;EAK1BC,KAAK,EAAEL;AALmB,CAA5B;AAQA;AACA;AACA;AACA;AACA;;AACA,IAAIQ,oBAAoB,GAAG,CACzBF,qBADyB,EAEzBL,qBAFyB,CAA3B;AAKA;AACA;AACA;AACA;;AACA,SAASQ,+BAAT,CAAyCC,oBAAzC,EAA+D;EAC7D,KAAKC,uBAAL;EACA,KAAKD,oBAAL,GAA4BA,oBAA5B;EACA,KAAKP,eAAL,GAAuBP,aAAa,CAACgB,SAAd,CAAwB,IAAxB,CAAvB;EACA,KAAKL,gBAAL,GAAwBV,qBAAqB,CAACe,SAAtB,EAAxB;AACD;;AAED,IAAIC,KAAK,GAAG;EACV;AACF;AACA;AACA;AACA;AACA;EACEC,sBAAsB,EAAE,YAAW;IACjC,OAAON,oBAAP;EACD,CATS;;EAWV;AACF;AACA;EACEO,kBAAkB,EAAE,YAAW;IAC7B,OAAO,KAAKZ,eAAZ;EACD,CAhBS;EAkBVa,mBAAmB,EAAE,YAAW;IAC9B,OAAO,KAAKT,gBAAZ;EACD,CApBS;;EAsBV;AACF;AACA;AACA;EACEU,UAAU,EAAE,YAAW;IACrBrB,aAAa,CAACsB,OAAd,CAAsB,KAAKf,eAA3B;IACA,KAAKA,eAAL,GAAuB,IAAvB;IAEAN,qBAAqB,CAACqB,OAAtB,CAA8B,KAAKX,gBAAnC;IACA,KAAKA,gBAAL,GAAwB,IAAxB;EACD;AAhCS,CAAZ;AAoCAR,MAAM,CACJU,+BAA+B,CAACU,SAD5B,EAEJrB,WAAW,CAACe,KAFR,EAGJA,KAHI,CAAN;AAMAnB,WAAW,CAAC0B,YAAZ,CAAyBX,+BAAzB;AAEAY,MAAM,CAACC,OAAP,GAAiBb,+BAAjB"},"metadata":{},"sourceType":"script"}