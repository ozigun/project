{"ast":null,"code":"/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactElement\n */\n'use strict';\n\nvar ReactContext = require(\"./ReactContext\");\n\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\n\nvar assign = require(\"./Object.assign\");\n\nvar warning = require(\"./warning\");\n\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true\n};\n/**\n * Warn for mutations.\n *\n * @internal\n * @param {object} object\n * @param {string} key\n */\n\nfunction defineWarningProperty(object, key) {\n  Object.defineProperty(object, key, {\n    configurable: false,\n    enumerable: true,\n    get: function () {\n      if (!this._store) {\n        return null;\n      }\n\n      return this._store[key];\n    },\n    set: function (value) {\n      \"production\" !== process.env.NODE_ENV ? warning(false, 'Don\\'t set the %s property of the React element. Instead, ' + 'specify the correct value when initially creating the element.', key) : null;\n      this._store[key] = value;\n    }\n  });\n}\n/**\n * This is updated to true if the membrane is successfully created.\n */\n\n\nvar useMutationMembrane = false;\n/**\n * Warn for mutations.\n *\n * @internal\n * @param {object} element\n */\n\nfunction defineMutationMembrane(prototype) {\n  try {\n    var pseudoFrozenProperties = {\n      props: true\n    };\n\n    for (var key in pseudoFrozenProperties) {\n      defineWarningProperty(prototype, key);\n    }\n\n    useMutationMembrane = true;\n  } catch (x) {// IE will fail on defineProperty\n  }\n}\n/**\n * Base constructor for all React elements. This is only used to make this\n * work with a dynamic instanceof check. Nothing should live on this prototype.\n *\n * @param {*} type\n * @param {string|object} ref\n * @param {*} key\n * @param {*} props\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, owner, context, props) {\n  // Built-in properties that belong on the element\n  this.type = type;\n  this.key = key;\n  this.ref = ref; // Record the component responsible for creating this element.\n\n  this._owner = owner; // TODO: Deprecate withContext, and then the context becomes accessible\n  // through the owner.\n\n  this._context = context;\n\n  if (\"production\" !== process.env.NODE_ENV) {\n    // The validation flag and props are currently mutative. We put them on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    this._store = {\n      props: props,\n      originalProps: assign({}, props)\n    }; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    try {\n      Object.defineProperty(this._store, 'validated', {\n        configurable: false,\n        enumerable: false,\n        writable: true\n      });\n    } catch (x) {}\n\n    this._store.validated = false; // We're not allowed to set props directly on the object so we early\n    // return and rely on the prototype membrane to forward to the backing\n    // store.\n\n    if (useMutationMembrane) {\n      Object.freeze(this);\n      return;\n    }\n  }\n\n  this.props = props;\n}; // We intentionally don't expose the function on the constructor property.\n// ReactElement should be indistinguishable from a plain object.\n\n\nReactElement.prototype = {\n  _isReactElement: true\n};\n\nif (\"production\" !== process.env.NODE_ENV) {\n  defineMutationMembrane(ReactElement.prototype);\n}\n\nReactElement.createElement = function (type, config, children) {\n  var propName; // Reserved names are extracted\n\n  var props = {};\n  var key = null;\n  var ref = null;\n\n  if (config != null) {\n    ref = config.ref === undefined ? null : config.ref;\n    key = config.key === undefined ? null : '' + config.key; // Remaining properties are added to a new props object\n\n    for (propName in config) {\n      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    props.children = childArray;\n  } // Resolve default props\n\n\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n\n    for (propName in defaultProps) {\n      if (typeof props[propName] === 'undefined') {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  return new ReactElement(type, key, ref, ReactCurrentOwner.current, ReactContext.current, props);\n};\n\nReactElement.createFactory = function (type) {\n  var factory = ReactElement.createElement.bind(null, type); // Expose the type on the factory and the prototype so that it can be\n  // easily accessed on elements. E.g. <Foo />.type === Foo.type.\n  // This should not be named `constructor` since this may not be the function\n  // that created the element, and it may not even be a constructor.\n  // Legacy hook TODO: Warn if this is accessed\n\n  factory.type = type;\n  return factory;\n};\n\nReactElement.cloneAndReplaceProps = function (oldElement, newProps) {\n  var newElement = new ReactElement(oldElement.type, oldElement.key, oldElement.ref, oldElement._owner, oldElement._context, newProps);\n\n  if (\"production\" !== process.env.NODE_ENV) {\n    // If the key on the original is valid, then the clone is valid\n    newElement._store.validated = oldElement._store.validated;\n  }\n\n  return newElement;\n};\n\nReactElement.cloneElement = function (element, config, children) {\n  var propName; // Original props are copied\n\n  var props = assign({}, element.props); // Reserved names are extracted\n\n  var key = element.key;\n  var ref = element.ref; // Owner will be preserved, unless ref is overridden\n\n  var owner = element._owner;\n\n  if (config != null) {\n    if (config.ref !== undefined) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n\n    if (config.key !== undefined) {\n      key = '' + config.key;\n    } // Remaining properties override existing props\n\n\n    for (propName in config) {\n      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    props.children = childArray;\n  }\n\n  return new ReactElement(element.type, key, ref, owner, element._context, props);\n};\n/**\n * @param {?object} object\n * @return {boolean} True if `object` is a valid component.\n * @final\n */\n\n\nReactElement.isValidElement = function (object) {\n  // ReactTestUtils is often used outside of beforeEach where as React is\n  // within it. This leads to two different instances of React on the same\n  // page. To identify a element from a different React instance we use\n  // a flag instead of an instanceof check.\n  var isElement = !!(object && object._isReactElement); // if (isElement && !(object instanceof ReactElement)) {\n  // This is an indicator that you're using multiple versions of React at the\n  // same time. This will screw with ownership and stuff. Fix it, please.\n  // TODO: We could possibly warn here.\n  // }\n\n  return isElement;\n};\n\nmodule.exports = ReactElement;","map":{"version":3,"names":["ReactContext","require","ReactCurrentOwner","assign","warning","RESERVED_PROPS","key","ref","defineWarningProperty","object","Object","defineProperty","configurable","enumerable","get","_store","set","value","process","env","NODE_ENV","useMutationMembrane","defineMutationMembrane","prototype","pseudoFrozenProperties","props","x","ReactElement","type","owner","context","_owner","_context","originalProps","writable","validated","freeze","_isReactElement","createElement","config","children","propName","undefined","hasOwnProperty","childrenLength","arguments","length","childArray","Array","i","defaultProps","current","createFactory","factory","bind","cloneAndReplaceProps","oldElement","newProps","newElement","cloneElement","element","isValidElement","isElement","module","exports"],"sources":["/Users/ozigun1988/Desktop/git/project/sosyete-frontend/node_modules/react-upvote/node_modules/react/lib/ReactElement.js"],"sourcesContent":["/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactElement\n */\n\n'use strict';\n\nvar ReactContext = require(\"./ReactContext\");\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\n\nvar assign = require(\"./Object.assign\");\nvar warning = require(\"./warning\");\n\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true\n};\n\n/**\n * Warn for mutations.\n *\n * @internal\n * @param {object} object\n * @param {string} key\n */\nfunction defineWarningProperty(object, key) {\n  Object.defineProperty(object, key, {\n\n    configurable: false,\n    enumerable: true,\n\n    get: function() {\n      if (!this._store) {\n        return null;\n      }\n      return this._store[key];\n    },\n\n    set: function(value) {\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        false,\n        'Don\\'t set the %s property of the React element. Instead, ' +\n        'specify the correct value when initially creating the element.',\n        key\n      ) : null);\n      this._store[key] = value;\n    }\n\n  });\n}\n\n/**\n * This is updated to true if the membrane is successfully created.\n */\nvar useMutationMembrane = false;\n\n/**\n * Warn for mutations.\n *\n * @internal\n * @param {object} element\n */\nfunction defineMutationMembrane(prototype) {\n  try {\n    var pseudoFrozenProperties = {\n      props: true\n    };\n    for (var key in pseudoFrozenProperties) {\n      defineWarningProperty(prototype, key);\n    }\n    useMutationMembrane = true;\n  } catch (x) {\n    // IE will fail on defineProperty\n  }\n}\n\n/**\n * Base constructor for all React elements. This is only used to make this\n * work with a dynamic instanceof check. Nothing should live on this prototype.\n *\n * @param {*} type\n * @param {string|object} ref\n * @param {*} key\n * @param {*} props\n * @internal\n */\nvar ReactElement = function(type, key, ref, owner, context, props) {\n  // Built-in properties that belong on the element\n  this.type = type;\n  this.key = key;\n  this.ref = ref;\n\n  // Record the component responsible for creating this element.\n  this._owner = owner;\n\n  // TODO: Deprecate withContext, and then the context becomes accessible\n  // through the owner.\n  this._context = context;\n\n  if (\"production\" !== process.env.NODE_ENV) {\n    // The validation flag and props are currently mutative. We put them on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    this._store = {props: props, originalProps: assign({}, props)};\n\n    // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n    try {\n      Object.defineProperty(this._store, 'validated', {\n        configurable: false,\n        enumerable: false,\n        writable: true\n      });\n    } catch (x) {\n    }\n    this._store.validated = false;\n\n    // We're not allowed to set props directly on the object so we early\n    // return and rely on the prototype membrane to forward to the backing\n    // store.\n    if (useMutationMembrane) {\n      Object.freeze(this);\n      return;\n    }\n  }\n\n  this.props = props;\n};\n\n// We intentionally don't expose the function on the constructor property.\n// ReactElement should be indistinguishable from a plain object.\nReactElement.prototype = {\n  _isReactElement: true\n};\n\nif (\"production\" !== process.env.NODE_ENV) {\n  defineMutationMembrane(ReactElement.prototype);\n}\n\nReactElement.createElement = function(type, config, children) {\n  var propName;\n\n  // Reserved names are extracted\n  var props = {};\n\n  var key = null;\n  var ref = null;\n\n  if (config != null) {\n    ref = config.ref === undefined ? null : config.ref;\n    key = config.key === undefined ? null : '' + config.key;\n    // Remaining properties are added to a new props object\n    for (propName in config) {\n      if (config.hasOwnProperty(propName) &&\n          !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (typeof props[propName] === 'undefined') {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  return new ReactElement(\n    type,\n    key,\n    ref,\n    ReactCurrentOwner.current,\n    ReactContext.current,\n    props\n  );\n};\n\nReactElement.createFactory = function(type) {\n  var factory = ReactElement.createElement.bind(null, type);\n  // Expose the type on the factory and the prototype so that it can be\n  // easily accessed on elements. E.g. <Foo />.type === Foo.type.\n  // This should not be named `constructor` since this may not be the function\n  // that created the element, and it may not even be a constructor.\n  // Legacy hook TODO: Warn if this is accessed\n  factory.type = type;\n  return factory;\n};\n\nReactElement.cloneAndReplaceProps = function(oldElement, newProps) {\n  var newElement = new ReactElement(\n    oldElement.type,\n    oldElement.key,\n    oldElement.ref,\n    oldElement._owner,\n    oldElement._context,\n    newProps\n  );\n\n  if (\"production\" !== process.env.NODE_ENV) {\n    // If the key on the original is valid, then the clone is valid\n    newElement._store.validated = oldElement._store.validated;\n  }\n  return newElement;\n};\n\nReactElement.cloneElement = function(element, config, children) {\n  var propName;\n\n  // Original props are copied\n  var props = assign({}, element.props);\n\n  // Reserved names are extracted\n  var key = element.key;\n  var ref = element.ref;\n\n  // Owner will be preserved, unless ref is overridden\n  var owner = element._owner;\n\n  if (config != null) {\n    if (config.ref !== undefined) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n    if (config.key !== undefined) {\n      key = '' + config.key;\n    }\n    // Remaining properties override existing props\n    for (propName in config) {\n      if (config.hasOwnProperty(propName) &&\n          !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  return new ReactElement(\n    element.type,\n    key,\n    ref,\n    owner,\n    element._context,\n    props\n  );\n};\n\n/**\n * @param {?object} object\n * @return {boolean} True if `object` is a valid component.\n * @final\n */\nReactElement.isValidElement = function(object) {\n  // ReactTestUtils is often used outside of beforeEach where as React is\n  // within it. This leads to two different instances of React on the same\n  // page. To identify a element from a different React instance we use\n  // a flag instead of an instanceof check.\n  var isElement = !!(object && object._isReactElement);\n  // if (isElement && !(object instanceof ReactElement)) {\n  // This is an indicator that you're using multiple versions of React at the\n  // same time. This will screw with ownership and stuff. Fix it, please.\n  // TODO: We could possibly warn here.\n  // }\n  return isElement;\n};\n\nmodule.exports = ReactElement;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}