{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getMarkupWrap\n */\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar invariant = require(\"./invariant\");\n/**\n * Dummy container used to detect which wraps are necessary.\n */\n\n\nvar dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n/**\n * Some browsers cannot use `innerHTML` to render certain elements standalone,\n * so we wrap them, render the wrapped nodes, then extract the desired node.\n *\n * In IE8, certain elements cannot render alone, so wrap all elements ('*').\n */\n\nvar shouldWrap = {\n  // Force wrapping for SVG elements because if they get created inside a <div>,\n  // they will be initialized in the wrong namespace (and will not display).\n  'circle': true,\n  'clipPath': true,\n  'defs': true,\n  'ellipse': true,\n  'g': true,\n  'line': true,\n  'linearGradient': true,\n  'path': true,\n  'polygon': true,\n  'polyline': true,\n  'radialGradient': true,\n  'rect': true,\n  'stop': true,\n  'text': true\n};\nvar selectWrap = [1, '<select multiple=\"true\">', '</select>'];\nvar tableWrap = [1, '<table>', '</table>'];\nvar trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\nvar svgWrap = [1, '<svg>', '</svg>'];\nvar markupWrap = {\n  '*': [1, '?<div>', '</div>'],\n  'area': [1, '<map>', '</map>'],\n  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n  'legend': [1, '<fieldset>', '</fieldset>'],\n  'param': [1, '<object>', '</object>'],\n  'tr': [2, '<table><tbody>', '</tbody></table>'],\n  'optgroup': selectWrap,\n  'option': selectWrap,\n  'caption': tableWrap,\n  'colgroup': tableWrap,\n  'tbody': tableWrap,\n  'tfoot': tableWrap,\n  'thead': tableWrap,\n  'td': trWrap,\n  'th': trWrap,\n  'circle': svgWrap,\n  'clipPath': svgWrap,\n  'defs': svgWrap,\n  'ellipse': svgWrap,\n  'g': svgWrap,\n  'line': svgWrap,\n  'linearGradient': svgWrap,\n  'path': svgWrap,\n  'polygon': svgWrap,\n  'polyline': svgWrap,\n  'radialGradient': svgWrap,\n  'rect': svgWrap,\n  'stop': svgWrap,\n  'text': svgWrap\n};\n/**\n * Gets the markup wrap configuration for the supplied `nodeName`.\n *\n * NOTE: This lazily detects which wraps are necessary for the current browser.\n *\n * @param {string} nodeName Lowercase `nodeName`.\n * @return {?array} Markup wrap configuration, if applicable.\n */\n\nfunction getMarkupWrap(nodeName) {\n  \"production\" !== process.env.NODE_ENV ? invariant(!!dummyNode, 'Markup wrapping node not initialized') : invariant(!!dummyNode);\n\n  if (!markupWrap.hasOwnProperty(nodeName)) {\n    nodeName = '*';\n  }\n\n  if (!shouldWrap.hasOwnProperty(nodeName)) {\n    if (nodeName === '*') {\n      dummyNode.innerHTML = '<link />';\n    } else {\n      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';\n    }\n\n    shouldWrap[nodeName] = !dummyNode.firstChild;\n  }\n\n  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;\n}\n\nmodule.exports = getMarkupWrap;","map":{"version":3,"names":["ExecutionEnvironment","require","invariant","dummyNode","canUseDOM","document","createElement","shouldWrap","selectWrap","tableWrap","trWrap","svgWrap","markupWrap","getMarkupWrap","nodeName","process","env","NODE_ENV","hasOwnProperty","innerHTML","firstChild","module","exports"],"sources":["/Users/ozigun1988/Desktop/git/project/sosyete-frontend/node_modules/react-upvote/node_modules/react/lib/getMarkupWrap.js"],"sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getMarkupWrap\n */\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar invariant = require(\"./invariant\");\n\n/**\n * Dummy container used to detect which wraps are necessary.\n */\nvar dummyNode =\n  ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n\n/**\n * Some browsers cannot use `innerHTML` to render certain elements standalone,\n * so we wrap them, render the wrapped nodes, then extract the desired node.\n *\n * In IE8, certain elements cannot render alone, so wrap all elements ('*').\n */\nvar shouldWrap = {\n  // Force wrapping for SVG elements because if they get created inside a <div>,\n  // they will be initialized in the wrong namespace (and will not display).\n  'circle': true,\n  'clipPath': true,\n  'defs': true,\n  'ellipse': true,\n  'g': true,\n  'line': true,\n  'linearGradient': true,\n  'path': true,\n  'polygon': true,\n  'polyline': true,\n  'radialGradient': true,\n  'rect': true,\n  'stop': true,\n  'text': true\n};\n\nvar selectWrap = [1, '<select multiple=\"true\">', '</select>'];\nvar tableWrap = [1, '<table>', '</table>'];\nvar trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nvar svgWrap = [1, '<svg>', '</svg>'];\n\nvar markupWrap = {\n  '*': [1, '?<div>', '</div>'],\n\n  'area': [1, '<map>', '</map>'],\n  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n  'legend': [1, '<fieldset>', '</fieldset>'],\n  'param': [1, '<object>', '</object>'],\n  'tr': [2, '<table><tbody>', '</tbody></table>'],\n\n  'optgroup': selectWrap,\n  'option': selectWrap,\n\n  'caption': tableWrap,\n  'colgroup': tableWrap,\n  'tbody': tableWrap,\n  'tfoot': tableWrap,\n  'thead': tableWrap,\n\n  'td': trWrap,\n  'th': trWrap,\n\n  'circle': svgWrap,\n  'clipPath': svgWrap,\n  'defs': svgWrap,\n  'ellipse': svgWrap,\n  'g': svgWrap,\n  'line': svgWrap,\n  'linearGradient': svgWrap,\n  'path': svgWrap,\n  'polygon': svgWrap,\n  'polyline': svgWrap,\n  'radialGradient': svgWrap,\n  'rect': svgWrap,\n  'stop': svgWrap,\n  'text': svgWrap\n};\n\n/**\n * Gets the markup wrap configuration for the supplied `nodeName`.\n *\n * NOTE: This lazily detects which wraps are necessary for the current browser.\n *\n * @param {string} nodeName Lowercase `nodeName`.\n * @return {?array} Markup wrap configuration, if applicable.\n */\nfunction getMarkupWrap(nodeName) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(!!dummyNode, 'Markup wrapping node not initialized') : invariant(!!dummyNode));\n  if (!markupWrap.hasOwnProperty(nodeName)) {\n    nodeName = '*';\n  }\n  if (!shouldWrap.hasOwnProperty(nodeName)) {\n    if (nodeName === '*') {\n      dummyNode.innerHTML = '<link />';\n    } else {\n      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';\n    }\n    shouldWrap[nodeName] = !dummyNode.firstChild;\n  }\n  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;\n}\n\n\nmodule.exports = getMarkupWrap;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}