{"ast":null,"code":"/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactElementValidator\n */\n\n/**\n * ReactElementValidator provides a wrapper around a element factory\n * which validates the props passed to the element. This is intended to be\n * used only in DEV and could be replaced by a static type checker for languages\n * that support it.\n */\n'use strict';\n\nvar ReactElement = require(\"./ReactElement\");\n\nvar ReactFragment = require(\"./ReactFragment\");\n\nvar ReactPropTypeLocations = require(\"./ReactPropTypeLocations\");\n\nvar ReactPropTypeLocationNames = require(\"./ReactPropTypeLocationNames\");\n\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\n\nvar ReactNativeComponent = require(\"./ReactNativeComponent\");\n\nvar getIteratorFn = require(\"./getIteratorFn\");\n\nvar invariant = require(\"./invariant\");\n\nvar warning = require(\"./warning\");\n\nfunction getDeclarationErrorAddendum() {\n  if (ReactCurrentOwner.current) {\n    var name = ReactCurrentOwner.current.getName();\n\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n\n  return '';\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\nvar loggedTypeFailures = {};\nvar NUMERIC_PROPERTY_REGEX = /^\\d+$/;\n/**\n * Gets the instance's name for use in warnings.\n *\n * @internal\n * @return {?string} Display name or undefined\n */\n\nfunction getName(instance) {\n  var publicInstance = instance && instance.getPublicInstance();\n\n  if (!publicInstance) {\n    return undefined;\n  }\n\n  var constructor = publicInstance.constructor;\n\n  if (!constructor) {\n    return undefined;\n  }\n\n  return constructor.displayName || constructor.name || undefined;\n}\n/**\n * Gets the current owner's displayName for use in warnings.\n *\n * @internal\n * @return {?string} Display name or undefined\n */\n\n\nfunction getCurrentOwnerDisplayName() {\n  var current = ReactCurrentOwner.current;\n  return current && getName(current) || undefined;\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  if (element._store.validated || element.key != null) {\n    return;\n  }\n\n  element._store.validated = true;\n  warnAndMonitorForKeyUse('Each child in an array or iterator should have a unique \"key\" prop.', element, parentType);\n}\n/**\n * Warn if the key is being defined as an object property but has an incorrect\n * value.\n *\n * @internal\n * @param {string} name Property name of the key.\n * @param {ReactElement} element Component that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validatePropertyKey(name, element, parentType) {\n  if (!NUMERIC_PROPERTY_REGEX.test(name)) {\n    return;\n  }\n\n  warnAndMonitorForKeyUse('Child objects should have non-numeric keys so ordering is preserved.', element, parentType);\n}\n/**\n * Shared warning and monitoring code for the key warnings.\n *\n * @internal\n * @param {string} message The base warning that gets output.\n * @param {ReactElement} element Component that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction warnAndMonitorForKeyUse(message, element, parentType) {\n  var ownerName = getCurrentOwnerDisplayName();\n  var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n  var useName = ownerName || parentName;\n  var memoizer = ownerHasKeyUseWarning[message] || (ownerHasKeyUseWarning[message] = {});\n\n  if (memoizer.hasOwnProperty(useName)) {\n    return;\n  }\n\n  memoizer[useName] = true;\n  var parentOrOwnerAddendum = ownerName ? \" Check the render method of \" + ownerName + \".\" : parentName ? \" Check the React.render call using <\" + parentName + \">.\" : ''; // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n\n  var childOwnerAddendum = '';\n\n  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n    // Name of the component that originally created this child.\n    var childOwnerName = getName(element._owner);\n    childOwnerAddendum = \" It was passed a child from \" + childOwnerName + \".\";\n  }\n\n  \"production\" !== process.env.NODE_ENV ? warning(false, message + '%s%s See https://fb.me/react-warning-keys for more information.', parentOrOwnerAddendum, childOwnerAddendum) : null;\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  if (Array.isArray(node)) {\n    for (var i = 0; i < node.length; i++) {\n      var child = node[i];\n\n      if (ReactElement.isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (ReactElement.isValidElement(node)) {\n    // This element was passed in a valid location.\n    node._store.validated = true;\n  } else if (node) {\n    var iteratorFn = getIteratorFn(node); // Entry iterators provide implicit keys.\n\n    if (iteratorFn) {\n      if (iteratorFn !== node.entries) {\n        var iterator = iteratorFn.call(node);\n        var step;\n\n        while (!(step = iterator.next()).done) {\n          if (ReactElement.isValidElement(step.value)) {\n            validateExplicitKey(step.value, parentType);\n          }\n        }\n      }\n    } else if (typeof node === 'object') {\n      var fragment = ReactFragment.extractIfFragment(node);\n\n      for (var key in fragment) {\n        if (fragment.hasOwnProperty(key)) {\n          validatePropertyKey(key, fragment[key], parentType);\n        }\n      }\n    }\n  }\n}\n/**\n * Assert that the props are valid\n *\n * @param {string} componentName Name of the component for error messages.\n * @param {object} propTypes Map of prop name to a ReactPropType\n * @param {object} props\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @private\n */\n\n\nfunction checkPropTypes(componentName, propTypes, props, location) {\n  for (var propName in propTypes) {\n    if (propTypes.hasOwnProperty(propName)) {\n      var error; // Prop type validation may throw. In case they do, we don't want to\n      // fail the render phase where it didn't fail before. So we log it.\n      // After these have been cleaned up, we'll let them throw.\n\n      try {\n        // This is intentionally an invariant that gets caught. It's the same\n        // behavior as without this statement except with a better message.\n        \"production\" !== process.env.NODE_ENV ? invariant(typeof propTypes[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], propName) : invariant(typeof propTypes[propName] === 'function');\n        error = propTypes[propName](props, propName, componentName, location);\n      } catch (ex) {\n        error = ex;\n      }\n\n      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n        // Only monitor this failure once because there tends to be a lot of the\n        // same error.\n        loggedTypeFailures[error.message] = true;\n        var addendum = getDeclarationErrorAddendum(this);\n        \"production\" !== process.env.NODE_ENV ? warning(false, 'Failed propType: %s%s', error.message, addendum) : null;\n      }\n    }\n  }\n}\n\nvar warnedPropsMutations = {};\n/**\n * Warn about mutating props when setting `propName` on `element`.\n *\n * @param {string} propName The string key within props that was set\n * @param {ReactElement} element\n */\n\nfunction warnForPropsMutation(propName, element) {\n  var type = element.type;\n  var elementName = typeof type === 'string' ? type : type.displayName;\n  var ownerName = element._owner ? element._owner.getPublicInstance().constructor.displayName : null;\n  var warningKey = propName + '|' + elementName + '|' + ownerName;\n\n  if (warnedPropsMutations.hasOwnProperty(warningKey)) {\n    return;\n  }\n\n  warnedPropsMutations[warningKey] = true;\n  var elementInfo = '';\n\n  if (elementName) {\n    elementInfo = ' <' + elementName + ' />';\n  }\n\n  var ownerInfo = '';\n\n  if (ownerName) {\n    ownerInfo = ' The element was created by ' + ownerName + '.';\n  }\n\n  \"production\" !== process.env.NODE_ENV ? warning(false, 'Don\\'t set .props.%s of the React component%s. Instead, specify the ' + 'correct value when initially creating the element or use ' + 'React.cloneElement to make a new element with updated props.%s', propName, elementInfo, ownerInfo) : null;\n} // Inline Object.is polyfill\n\n\nfunction is(a, b) {\n  if (a !== a) {\n    // NaN\n    return b !== b;\n  }\n\n  if (a === 0 && b === 0) {\n    // +-0\n    return 1 / a === 1 / b;\n  }\n\n  return a === b;\n}\n/**\n * Given an element, check if its props have been mutated since element\n * creation (or the last call to this function). In particular, check if any\n * new props have been added, which we can't directly catch by defining warning\n * properties on the props object.\n *\n * @param {ReactElement} element\n */\n\n\nfunction checkAndWarnForMutatedProps(element) {\n  if (!element._store) {\n    // Element was created using `new ReactElement` directly or with\n    // `ReactElement.createElement`; skip mutation checking\n    return;\n  }\n\n  var originalProps = element._store.originalProps;\n  var props = element.props;\n\n  for (var propName in props) {\n    if (props.hasOwnProperty(propName)) {\n      if (!originalProps.hasOwnProperty(propName) || !is(originalProps[propName], props[propName])) {\n        warnForPropsMutation(propName, element); // Copy over the new value so that the two props objects match again\n\n        originalProps[propName] = props[propName];\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  if (element.type == null) {\n    // This has already warned. Don't throw.\n    return;\n  } // Extract the component class from the element. Converts string types\n  // to a composite class which may have propTypes.\n  // TODO: Validating a string's propTypes is not decoupled from the\n  // rendering target which is problematic.\n\n\n  var componentClass = ReactNativeComponent.getComponentClassForElement(element);\n  var name = componentClass.displayName || componentClass.name;\n\n  if (componentClass.propTypes) {\n    checkPropTypes(name, componentClass.propTypes, element.props, ReactPropTypeLocations.prop);\n  }\n\n  if (typeof componentClass.getDefaultProps === 'function') {\n    \"production\" !== process.env.NODE_ENV ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : null;\n  }\n}\n\nvar ReactElementValidator = {\n  checkAndWarnForMutatedProps: checkAndWarnForMutatedProps,\n  createElement: function (type, props, children) {\n    // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n    \"production\" !== process.env.NODE_ENV ? warning(type != null, 'React.createElement: type should not be null or undefined. It should ' + 'be a string (for DOM elements) or a ReactClass (for composite ' + 'components).') : null;\n    var element = ReactElement.createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    }\n\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], type);\n    }\n\n    validatePropTypes(element);\n    return element;\n  },\n  createFactory: function (type) {\n    var validatedFactory = ReactElementValidator.createElement.bind(null, type); // Legacy hook TODO: Warn if this is accessed\n\n    validatedFactory.type = type;\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      try {\n        Object.defineProperty(validatedFactory, 'type', {\n          enumerable: false,\n          get: function () {\n            \"production\" !== process.env.NODE_ENV ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : null;\n            Object.defineProperty(this, 'type', {\n              value: type\n            });\n            return type;\n          }\n        });\n      } catch (x) {// IE will fail on defineProperty (es5-shim/sham too)\n      }\n    }\n\n    return validatedFactory;\n  },\n  cloneElement: function (element, props, children) {\n    var newElement = ReactElement.cloneElement.apply(this, arguments);\n\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], newElement.type);\n    }\n\n    validatePropTypes(newElement);\n    return newElement;\n  }\n};\nmodule.exports = ReactElementValidator;","map":{"version":3,"names":["ReactElement","require","ReactFragment","ReactPropTypeLocations","ReactPropTypeLocationNames","ReactCurrentOwner","ReactNativeComponent","getIteratorFn","invariant","warning","getDeclarationErrorAddendum","current","name","getName","ownerHasKeyUseWarning","loggedTypeFailures","NUMERIC_PROPERTY_REGEX","instance","publicInstance","getPublicInstance","undefined","constructor","displayName","getCurrentOwnerDisplayName","validateExplicitKey","element","parentType","_store","validated","key","warnAndMonitorForKeyUse","validatePropertyKey","test","message","ownerName","parentName","useName","memoizer","hasOwnProperty","parentOrOwnerAddendum","childOwnerAddendum","_owner","childOwnerName","process","env","NODE_ENV","validateChildKeys","node","Array","isArray","i","length","child","isValidElement","iteratorFn","entries","iterator","call","step","next","done","value","fragment","extractIfFragment","checkPropTypes","componentName","propTypes","props","location","propName","error","ex","Error","addendum","warnedPropsMutations","warnForPropsMutation","type","elementName","warningKey","elementInfo","ownerInfo","is","a","b","checkAndWarnForMutatedProps","originalProps","validatePropTypes","componentClass","getComponentClassForElement","prop","getDefaultProps","isReactClassApproved","ReactElementValidator","createElement","children","apply","arguments","createFactory","validatedFactory","bind","Object","defineProperty","enumerable","get","x","cloneElement","newElement","module","exports"],"sources":["/Users/ozigun1988/Desktop/git/project/sosyete-frontend/node_modules/react-upvote/node_modules/react/lib/ReactElementValidator.js"],"sourcesContent":["/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactElementValidator\n */\n\n/**\n * ReactElementValidator provides a wrapper around a element factory\n * which validates the props passed to the element. This is intended to be\n * used only in DEV and could be replaced by a static type checker for languages\n * that support it.\n */\n\n'use strict';\n\nvar ReactElement = require(\"./ReactElement\");\nvar ReactFragment = require(\"./ReactFragment\");\nvar ReactPropTypeLocations = require(\"./ReactPropTypeLocations\");\nvar ReactPropTypeLocationNames = require(\"./ReactPropTypeLocationNames\");\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\nvar ReactNativeComponent = require(\"./ReactNativeComponent\");\n\nvar getIteratorFn = require(\"./getIteratorFn\");\nvar invariant = require(\"./invariant\");\nvar warning = require(\"./warning\");\n\nfunction getDeclarationErrorAddendum() {\n  if (ReactCurrentOwner.current) {\n    var name = ReactCurrentOwner.current.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\nvar ownerHasKeyUseWarning = {};\n\nvar loggedTypeFailures = {};\n\nvar NUMERIC_PROPERTY_REGEX = /^\\d+$/;\n\n/**\n * Gets the instance's name for use in warnings.\n *\n * @internal\n * @return {?string} Display name or undefined\n */\nfunction getName(instance) {\n  var publicInstance = instance && instance.getPublicInstance();\n  if (!publicInstance) {\n    return undefined;\n  }\n  var constructor = publicInstance.constructor;\n  if (!constructor) {\n    return undefined;\n  }\n  return constructor.displayName || constructor.name || undefined;\n}\n\n/**\n * Gets the current owner's displayName for use in warnings.\n *\n * @internal\n * @return {?string} Display name or undefined\n */\nfunction getCurrentOwnerDisplayName() {\n  var current = ReactCurrentOwner.current;\n  return (\n    current && getName(current) || undefined\n  );\n}\n\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\nfunction validateExplicitKey(element, parentType) {\n  if (element._store.validated || element.key != null) {\n    return;\n  }\n  element._store.validated = true;\n\n  warnAndMonitorForKeyUse(\n    'Each child in an array or iterator should have a unique \"key\" prop.',\n    element,\n    parentType\n  );\n}\n\n/**\n * Warn if the key is being defined as an object property but has an incorrect\n * value.\n *\n * @internal\n * @param {string} name Property name of the key.\n * @param {ReactElement} element Component that requires a key.\n * @param {*} parentType element's parent's type.\n */\nfunction validatePropertyKey(name, element, parentType) {\n  if (!NUMERIC_PROPERTY_REGEX.test(name)) {\n    return;\n  }\n  warnAndMonitorForKeyUse(\n    'Child objects should have non-numeric keys so ordering is preserved.',\n    element,\n    parentType\n  );\n}\n\n/**\n * Shared warning and monitoring code for the key warnings.\n *\n * @internal\n * @param {string} message The base warning that gets output.\n * @param {ReactElement} element Component that requires a key.\n * @param {*} parentType element's parent's type.\n */\nfunction warnAndMonitorForKeyUse(message, element, parentType) {\n  var ownerName = getCurrentOwnerDisplayName();\n  var parentName = typeof parentType === 'string' ?\n    parentType : parentType.displayName || parentType.name;\n\n  var useName = ownerName || parentName;\n  var memoizer = ownerHasKeyUseWarning[message] || (\n    (ownerHasKeyUseWarning[message] = {})\n  );\n  if (memoizer.hasOwnProperty(useName)) {\n    return;\n  }\n  memoizer[useName] = true;\n\n  var parentOrOwnerAddendum =\n    ownerName ? (\" Check the render method of \" + ownerName + \".\") :\n    parentName ? (\" Check the React.render call using <\" + parentName + \">.\") :\n    '';\n\n  // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n  var childOwnerAddendum = '';\n  if (element &&\n      element._owner &&\n      element._owner !== ReactCurrentOwner.current) {\n    // Name of the component that originally created this child.\n    var childOwnerName = getName(element._owner);\n\n    childOwnerAddendum = (\" It was passed a child from \" + childOwnerName + \".\");\n  }\n\n  (\"production\" !== process.env.NODE_ENV ? warning(\n    false,\n    message + '%s%s See https://fb.me/react-warning-keys for more information.',\n    parentOrOwnerAddendum,\n    childOwnerAddendum\n  ) : null);\n}\n\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\nfunction validateChildKeys(node, parentType) {\n  if (Array.isArray(node)) {\n    for (var i = 0; i < node.length; i++) {\n      var child = node[i];\n      if (ReactElement.isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (ReactElement.isValidElement(node)) {\n    // This element was passed in a valid location.\n    node._store.validated = true;\n  } else if (node) {\n    var iteratorFn = getIteratorFn(node);\n    // Entry iterators provide implicit keys.\n    if (iteratorFn) {\n      if (iteratorFn !== node.entries) {\n        var iterator = iteratorFn.call(node);\n        var step;\n        while (!(step = iterator.next()).done) {\n          if (ReactElement.isValidElement(step.value)) {\n            validateExplicitKey(step.value, parentType);\n          }\n        }\n      }\n    } else if (typeof node === 'object') {\n      var fragment = ReactFragment.extractIfFragment(node);\n      for (var key in fragment) {\n        if (fragment.hasOwnProperty(key)) {\n          validatePropertyKey(key, fragment[key], parentType);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Assert that the props are valid\n *\n * @param {string} componentName Name of the component for error messages.\n * @param {object} propTypes Map of prop name to a ReactPropType\n * @param {object} props\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @private\n */\nfunction checkPropTypes(componentName, propTypes, props, location) {\n  for (var propName in propTypes) {\n    if (propTypes.hasOwnProperty(propName)) {\n      var error;\n      // Prop type validation may throw. In case they do, we don't want to\n      // fail the render phase where it didn't fail before. So we log it.\n      // After these have been cleaned up, we'll let them throw.\n      try {\n        // This is intentionally an invariant that gets caught. It's the same\n        // behavior as without this statement except with a better message.\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          typeof propTypes[propName] === 'function',\n          '%s: %s type `%s` is invalid; it must be a function, usually from ' +\n          'React.PropTypes.',\n          componentName || 'React class',\n          ReactPropTypeLocationNames[location],\n          propName\n        ) : invariant(typeof propTypes[propName] === 'function'));\n        error = propTypes[propName](props, propName, componentName, location);\n      } catch (ex) {\n        error = ex;\n      }\n      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n        // Only monitor this failure once because there tends to be a lot of the\n        // same error.\n        loggedTypeFailures[error.message] = true;\n\n        var addendum = getDeclarationErrorAddendum(this);\n        (\"production\" !== process.env.NODE_ENV ? warning(false, 'Failed propType: %s%s', error.message, addendum) : null);\n      }\n    }\n  }\n}\n\nvar warnedPropsMutations = {};\n\n/**\n * Warn about mutating props when setting `propName` on `element`.\n *\n * @param {string} propName The string key within props that was set\n * @param {ReactElement} element\n */\nfunction warnForPropsMutation(propName, element) {\n  var type = element.type;\n  var elementName = typeof type === 'string' ? type : type.displayName;\n  var ownerName = element._owner ?\n    element._owner.getPublicInstance().constructor.displayName : null;\n\n  var warningKey = propName + '|' + elementName + '|' + ownerName;\n  if (warnedPropsMutations.hasOwnProperty(warningKey)) {\n    return;\n  }\n  warnedPropsMutations[warningKey] = true;\n\n  var elementInfo = '';\n  if (elementName) {\n    elementInfo = ' <' + elementName + ' />';\n  }\n  var ownerInfo = '';\n  if (ownerName) {\n    ownerInfo = ' The element was created by ' + ownerName + '.';\n  }\n\n  (\"production\" !== process.env.NODE_ENV ? warning(\n    false,\n    'Don\\'t set .props.%s of the React component%s. Instead, specify the ' +\n    'correct value when initially creating the element or use ' +\n    'React.cloneElement to make a new element with updated props.%s',\n    propName,\n    elementInfo,\n    ownerInfo\n  ) : null);\n}\n\n// Inline Object.is polyfill\nfunction is(a, b) {\n  if (a !== a) {\n    // NaN\n    return b !== b;\n  }\n  if (a === 0 && b === 0) {\n    // +-0\n    return 1 / a === 1 / b;\n  }\n  return a === b;\n}\n\n/**\n * Given an element, check if its props have been mutated since element\n * creation (or the last call to this function). In particular, check if any\n * new props have been added, which we can't directly catch by defining warning\n * properties on the props object.\n *\n * @param {ReactElement} element\n */\nfunction checkAndWarnForMutatedProps(element) {\n  if (!element._store) {\n    // Element was created using `new ReactElement` directly or with\n    // `ReactElement.createElement`; skip mutation checking\n    return;\n  }\n\n  var originalProps = element._store.originalProps;\n  var props = element.props;\n\n  for (var propName in props) {\n    if (props.hasOwnProperty(propName)) {\n      if (!originalProps.hasOwnProperty(propName) ||\n          !is(originalProps[propName], props[propName])) {\n        warnForPropsMutation(propName, element);\n\n        // Copy over the new value so that the two props objects match again\n        originalProps[propName] = props[propName];\n      }\n    }\n  }\n}\n\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\nfunction validatePropTypes(element) {\n  if (element.type == null) {\n    // This has already warned. Don't throw.\n    return;\n  }\n  // Extract the component class from the element. Converts string types\n  // to a composite class which may have propTypes.\n  // TODO: Validating a string's propTypes is not decoupled from the\n  // rendering target which is problematic.\n  var componentClass = ReactNativeComponent.getComponentClassForElement(\n    element\n  );\n  var name = componentClass.displayName || componentClass.name;\n  if (componentClass.propTypes) {\n    checkPropTypes(\n      name,\n      componentClass.propTypes,\n      element.props,\n      ReactPropTypeLocations.prop\n    );\n  }\n  if (typeof componentClass.getDefaultProps === 'function') {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      componentClass.getDefaultProps.isReactClassApproved,\n      'getDefaultProps is only used on classic React.createClass ' +\n      'definitions. Use a static property named `defaultProps` instead.'\n    ) : null);\n  }\n}\n\nvar ReactElementValidator = {\n\n  checkAndWarnForMutatedProps: checkAndWarnForMutatedProps,\n\n  createElement: function(type, props, children) {\n    // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      type != null,\n      'React.createElement: type should not be null or undefined. It should ' +\n        'be a string (for DOM elements) or a ReactClass (for composite ' +\n        'components).'\n    ) : null);\n\n    var element = ReactElement.createElement.apply(this, arguments);\n\n    // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n    if (element == null) {\n      return element;\n    }\n\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], type);\n    }\n\n    validatePropTypes(element);\n\n    return element;\n  },\n\n  createFactory: function(type) {\n    var validatedFactory = ReactElementValidator.createElement.bind(\n      null,\n      type\n    );\n    // Legacy hook TODO: Warn if this is accessed\n    validatedFactory.type = type;\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      try {\n        Object.defineProperty(\n          validatedFactory,\n          'type',\n          {\n            enumerable: false,\n            get: function() {\n              (\"production\" !== process.env.NODE_ENV ? warning(\n                false,\n                'Factory.type is deprecated. Access the class directly ' +\n                'before passing it to createFactory.'\n              ) : null);\n              Object.defineProperty(this, 'type', {\n                value: type\n              });\n              return type;\n            }\n          }\n        );\n      } catch (x) {\n        // IE will fail on defineProperty (es5-shim/sham too)\n      }\n    }\n\n\n    return validatedFactory;\n  },\n\n  cloneElement: function(element, props, children) {\n    var newElement = ReactElement.cloneElement.apply(this, arguments);\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], newElement.type);\n    }\n    validatePropTypes(newElement);\n    return newElement;\n  }\n\n};\n\nmodule.exports = ReactElementValidator;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}